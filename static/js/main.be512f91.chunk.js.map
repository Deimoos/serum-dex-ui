{"version":3,"sources":["assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/LinkAddress.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/WalletConnect.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","pages/ListNewMarketPage.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","parse","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","slice","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","lamports","space","programId","transaction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","address","process","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","current","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","constructor","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","payer","makePlaceOrderTransaction","placeOrderTx","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","Transaction","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","signPartial","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","error","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintInfos","customMarkets","useMarket","useTokenAccounts","useAllMarkets","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","baseLabel","quoteCurrency","quoteLabel","MarketProvider","setMarketAddress","setCustomMarkets","marketInfos","setMarket","then","catch","useSelectedTokenAccounts","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useAllOpenOrdersAccounts","stringProgramId","flat","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","Component","useInterval","delay","savedCallback","useRef","setInterval","clearInterval","Wrapper","styled","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","assign","FillsTable","fills","fill","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","base58","abbreviateAddress","shape","CopyOutlined","navigator","clipboard","writeText","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","LinkAddress","LinkOutlined","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","openOrdersAccountsConnected","marketInfosConnected","openOrdersAccountsByAddress","marketsAddr","marketsByAddress","getAllOpenOrders","marketAddr","loadBids","loadAsks","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","mintInfosConnected","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","mintsToTickers","customMarketInfo","useMintToTickers","openOrdersBalances","loadedOpenOrdersAccounts","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","useAllOpenOrdersBalances","openOrdersFree","openOrdersTotal","WalletConnect","connect","UserOutlined","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","history","useHistory","handleClick","endpointInfoCustom","handler","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","SubMenu","onTitleClick","open","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","ListNewMarketPage","useMintInput","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","validateStatus","hasFeedback","trim","colon","htmlType","tooltip","setAddress","help","parsed","Routes","basename","exact","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","ConvertPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be512f91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport BN from \"bn.js\";\r\n\r\nexport function isValidPublicKey(key) {\r\n  if (!key) {\r\n    return false;\r\n  }\r\n  try {\r\n    new PublicKey(key);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const percentFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport function floorToDecimal(value: number, decimals: number | undefined | null) {\r\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function roundToDecimal(value: number, decimals: number | undefined | null) {\r\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function getDecimalCount(value): number {\r\n  if (!isNaN(value) && Math.floor(value) !== value)\r\n    return value.toString().split('.')[1].length || 0;\r\n  return 0;\r\n}\r\n\r\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\r\n  const quotient = numerator.div(denominator).toNumber();\r\n  const rem = numerator.umod(denominator);\r\n  const gcd = rem.gcd(denominator);\r\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\r\n}\r\n\r\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\r\n  return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nconst localStorageListeners = {};\r\n\r\nexport function useLocalStorageStringState(\r\n  key: string,\r\n  defaultState: string | null = null,\r\n): [string | null, (newState: string | null) => void] {\r\n  const state = localStorage.getItem(key) || defaultState;\r\n\r\n  const [, notify] = useState(key + '\\n' + state);\r\n\r\n  useEffect(() => {\r\n    if (!localStorageListeners[key]) {\r\n      localStorageListeners[key] = [];\r\n    }\r\n    localStorageListeners[key].push(notify);\r\n    return () => {\r\n      localStorageListeners[key] = localStorageListeners[key].filter(\r\n        listener => listener !== notify,\r\n      );\r\n      if (localStorageListeners[key].length === 0) {\r\n        delete localStorageListeners[key];\r\n      }\r\n    };\r\n  }, [key]);\r\n\r\n  const setState = useCallback<(newState: string | null) => void>(\r\n    newState => {\r\n      const changed = state !== newState;\r\n      if (!changed) {\r\n        return;\r\n      }\r\n\r\n      if (newState === null) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, newState);\r\n      }\r\n      localStorageListeners[key].forEach(listener => listener(key + '\\n' + newState));\r\n    },\r\n    [state, key],\r\n  );\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport function useLocalStorageState<T = any>(key: string, defaultState: T | null = null): [T, (newState: T) => void] {\r\n  let [stringState, setStringState] = useLocalStorageStringState(key, JSON.stringify(defaultState));\r\n  return [stringState && JSON.parse(stringState), newState => setStringState(JSON.stringify(newState))];\r\n}\r\n\r\nexport function useEffectAfterTimeout(effect, timeout) {\r\n  useEffect(() => {\r\n    const handle = setTimeout(effect, timeout);\r\n    return () => clearTimeout(handle);\r\n  });\r\n}\r\n\r\nexport function useListener(emitter, eventName) {\r\n  const [, forceUpdate] = useState(0);\r\n  useEffect(() => {\r\n    const listener = () => forceUpdate((i) => i + 1);\r\n    emitter.on(eventName, listener);\r\n    return () => emitter.removeListener(eventName, listener);\r\n  }, [emitter, eventName]);\r\n}\r\n\r\nexport function abbreviateAddress(address, size = 4) {\r\n  const base58 = address.toBase58();\r\n  return base58.slice(0, size) + '…' + base58.slice(-size);\r\n}\r\n\r\nexport function isEqual(obj1, obj2, keys) {\r\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n    return false;\r\n  }\r\n  keys = keys || Object.keys(obj1);\r\n  for (const k of keys) {\r\n    if (obj1[k] !== obj2[k]) {\r\n      // shallow comparison\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nimport assert from 'assert';\r\n\r\nconst pageLoadTime = new Date();\r\n\r\nconst globalCache: Map<any, any> = new Map();\r\n\r\nclass FetchLoopListener<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  refreshInterval: number;\r\n  refreshIntervalOnError: number | null;\r\n  callback: () => void;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(\r\n    cacheKey: any,\r\n    fn: () => Promise<T>,\r\n    refreshInterval: number,\r\n    refreshIntervalOnError: number | null,\r\n    callback: () => void,\r\n    cacheNullValues: Boolean,\r\n  ) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.refreshInterval = refreshInterval;\r\n    this.refreshIntervalOnError = refreshIntervalOnError;\r\n    this.callback = callback;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n}\r\n\r\nclass FetchLoopInternal<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  timeoutId: null | any;\r\n  listeners: Set<FetchLoopListener<T>>;\r\n  errors: number;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.timeoutId = null;\r\n    this.listeners = new Set();\r\n    this.errors = 0;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n\r\n  get refreshInterval(): number {\r\n    return Math.min(\r\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\r\n    );\r\n  }\r\n\r\n  get refreshIntervalOnError(): number | null {\r\n    const refreshIntervalsOnError: number[] = [...this.listeners]\r\n      .map((listener) => listener.refreshIntervalOnError)\r\n      .filter((x): x is number => x !== null);\r\n    if (refreshIntervalsOnError.length === 0) {\r\n      return null;\r\n    }\r\n    return Math.min(...refreshIntervalsOnError);\r\n  }\r\n\r\n  get stopped(): boolean {\r\n    return this.listeners.size === 0;\r\n  }\r\n\r\n  addListener(listener: FetchLoopListener<T>): void {\r\n    const previousRefreshInterval = this.refreshInterval;\r\n    this.listeners.add(listener);\r\n    if (this.refreshInterval < previousRefreshInterval) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  removeListener(listener: FetchLoopListener<T>): void {\r\n    assert(this.listeners.delete(listener));\r\n    if (this.stopped) {\r\n      if (this.timeoutId) {\r\n        clearTimeout(this.timeoutId);\r\n        this.timeoutId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  notifyListeners(): void {\r\n    this.listeners.forEach((listener) => listener.callback());\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    let errored = false;\r\n    try {\r\n      const data = await this.fn();\r\n      if (!this.cacheNullValues && data === null) {\r\n        console.log(`Not caching null value for ${this.cacheKey}`)\r\n        // cached data has not changed so no need to re-render\r\n        this.errors = 0;\r\n        return data;\r\n      } else {\r\n        globalCache.set(this.cacheKey, data);\r\n        this.errors = 0;\r\n        this.notifyListeners();\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      ++this.errors;\r\n      console.warn(error);\r\n      errored = true;\r\n    } finally {\r\n      if (!this.timeoutId && !this.stopped) {\r\n        let waitTime = this.refreshInterval;\r\n        if (\r\n          errored &&\r\n          this.refreshIntervalOnError &&\r\n          this.refreshIntervalOnError > 0\r\n        ) {\r\n          waitTime = this.refreshIntervalOnError;\r\n        }\r\n\r\n        // Back off on errors.\r\n        if (this.errors > 0) {\r\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\r\n        }\r\n\r\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\r\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\r\n        if (timeSincePageLoad < 5000) {\r\n          waitTime += 5000 - timeSincePageLoad / 2;\r\n        }\r\n\r\n        // Refresh background pages slowly.\r\n        if (document.visibilityState === 'hidden') {\r\n          waitTime = 60000;\r\n        } else if (!document.hasFocus()) {\r\n          waitTime *= 1.5;\r\n        }\r\n\r\n        // Add jitter so we don't send all requests at the same time.\r\n        waitTime *= 0.8 + 0.4 * Math.random();\r\n\r\n        this.timeoutId = setTimeout(this.refresh, waitTime);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass FetchLoops {\r\n  loops = new Map();\r\n\r\n  addListener<T>(listener: FetchLoopListener<T>) {\r\n    if (!this.loops.has(listener.cacheKey)) {\r\n      this.loops.set(\r\n        listener.cacheKey,\r\n        new FetchLoopInternal<T>(\r\n          listener.cacheKey,\r\n          listener.fn,\r\n          listener.cacheNullValues,\r\n        ),\r\n      );\r\n    }\r\n    this.loops.get(listener.cacheKey).addListener(listener);\r\n  }\r\n\r\n  removeListener<T>(listener: FetchLoopListener<T>) {\r\n    const loop = this.loops.get(listener.cacheKey);\r\n    loop.removeListener(listener);\r\n    if (loop.stopped) {\r\n      this.loops.delete(listener.cacheKey);\r\n    }\r\n  }\r\n\r\n  refresh(cacheKey) {\r\n    if (this.loops.has(cacheKey)) {\r\n      this.loops.get(cacheKey).refresh();\r\n    }\r\n  }\r\n\r\n  refreshAll() {\r\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\r\n  }\r\n}\r\nconst globalLoops = new FetchLoops();\r\n\r\nexport function useAsyncData<T = any>(\r\n  asyncFn: () => Promise<T>,\r\n  cacheKey: any,\r\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\r\n  cacheNullValues: Boolean = true,\r\n): [null | undefined | T, boolean] {\r\n  const [, rerender] = useReducer((i) => i + 1, 0);\r\n\r\n  useEffect(() => {\r\n    if (!cacheKey) {\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      return () => {};\r\n    }\r\n    const listener = new FetchLoopListener<T>(\r\n      cacheKey,\r\n      asyncFn,\r\n      refreshInterval,\r\n      refreshIntervalOnError,\r\n      rerender,\r\n      cacheNullValues,\r\n    );\r\n    globalLoops.addListener(listener);\r\n    return () => globalLoops.removeListener(listener);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey, refreshInterval]);\r\n\r\n  if (!cacheKey) {\r\n    return [null, false];\r\n  }\r\n\r\n  const loaded = globalCache.has(cacheKey);\r\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\r\n  return [data, loaded];\r\n}\r\n\r\nexport function refreshCache(cacheKey: any, clearCache = false): void {\r\n  if (clearCache) {\r\n    globalCache.delete(cacheKey);\r\n  }\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.refresh();\r\n    if (clearCache) {\r\n      loop.notifyListeners();\r\n    }\r\n  }\r\n}\r\n\r\nexport function refreshAllCaches(): void {\r\n  for (const loop of globalLoops.loops.values()) {\r\n    loop.refresh();\r\n  }\r\n}\r\n\r\nexport function setCache(\r\n  cacheKey: any,\r\n  value: any,\r\n  { initializeOnly = false } = {},\r\n): void {\r\n  if (initializeOnly && globalCache.has(cacheKey)) {\r\n    return;\r\n  }\r\n  globalCache.set(cacheKey, value);\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.notifyListeners();\r\n  }\r\n}\r\n","import {useLocalStorageState} from './utils';\r\nimport {Account, AccountInfo, Connection, PublicKey} from '@solana/web3.js';\r\nimport React, {useContext, useEffect, useMemo} from 'react';\r\nimport {setCache, useAsyncData} from './fetch-loop';\r\nimport tuple from 'immutable-tuple';\r\nimport {ConnectionContextValues, EndpointInfo} from \"./types\";\r\n\r\nexport const ENDPOINTS: EndpointInfo[] = [\r\n  {\r\n    name: 'mainnet-beta',\r\n    endpoint: 'https://solana-api.projectserum.com',\r\n    custom: false\r\n  },\r\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\r\n];\r\n\r\nconst accountListenerCount = new Map();\r\n\r\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(null);\r\n\r\nexport function ConnectionProvider({ children }) {\r\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\r\n    'connectionEndpts',\r\n    ENDPOINTS[0].endpoint,\r\n  );\r\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<EndpointInfo[]>(\r\n    'customConnectionEndpoints',\r\n    []\r\n  )\r\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\r\n\r\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n\r\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\r\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\r\n  // This is a hack to prevent the list from every getting empty\r\n  useEffect(() => {\r\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\r\n    return () => {connection.removeAccountChangeListener(id)};\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = connection.onSlotChange(() => null);\r\n    return () => {connection.removeSlotChangeListener(id)};\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onAccountChange(\r\n      new Account().publicKey,\r\n      () => {},\r\n    );\r\n    return () => {sendConnection.removeAccountChangeListener(id)};\r\n  }, [sendConnection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onSlotChange(() => null);\r\n    return () => {sendConnection.removeSlotChangeListener(id)};\r\n  }, [sendConnection]);\r\n\r\n  return (\r\n    <ConnectionContext.Provider\r\n      value={{ endpoint, setEndpoint, connection, sendConnection, availableEndpoints, setCustomEndpoints }}\r\n    >\r\n      {children}\r\n    </ConnectionContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context')\r\n  }\r\n  return context.connection;\r\n}\r\n\r\nexport function useSendConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context')\r\n  }\r\n  return context.sendConnection;\r\n}\r\n\r\nexport function useConnectionConfig() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context')\r\n  }\r\n  return {\r\n    endpoint: context.endpoint,\r\n    endpointInfo: context.availableEndpoints.find(info => info.endpoint === context.endpoint),\r\n    setEndpoint: context.setEndpoint,\r\n    availableEndpoints: context.availableEndpoints,\r\n    setCustomEndpoints: context.setCustomEndpoints,\r\n  };\r\n}\r\n\r\nexport function useAccountInfo(publicKey: PublicKey | undefined | null): [AccountInfo<Buffer> | null | undefined, boolean] {\r\n  const connection = useConnection();\r\n  const cacheKey = tuple(connection, publicKey?.toBase58());\r\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\r\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\r\n    cacheKey,\r\n    { refreshInterval: 60_000 },\r\n  );\r\n  useEffect(() => {\r\n    if (!publicKey) {\r\n      return;\r\n    }\r\n    if (accountListenerCount.has(cacheKey)) {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      ++currentItem.count;\r\n    } else {\r\n      let previousData: Buffer | null = null;\r\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\r\n        if (e.data) {\r\n          if (!previousData || !previousData.equals(e.data)) {\r\n            setCache(cacheKey, e);\r\n          } else {\r\n          }\r\n          previousData = e.data;\r\n        }\r\n      });\r\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\r\n    }\r\n    return () => {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      let nextCount = currentItem.count - 1;\r\n      if (nextCount <= 0) {\r\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\r\n        accountListenerCount.delete(cacheKey);\r\n      } else {\r\n        --currentItem.count;\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey]);\r\n  return [accountInfo, loaded];\r\n}\r\n\r\nexport function useAccountData(publicKey) {\r\n  const [accountInfo] = useAccountInfo(publicKey);\r\n  return accountInfo && accountInfo.data;\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function Link({ external = false, ...props }) {\r\n  let { to, children, ...rest } = props;\r\n  if (external) {\r\n    return (\r\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n        {children}\r\n      </a>\r\n    );\r\n  }\r\n  return (\r\n    <RouterLink to={to} {...rest}>\r\n      {children}\r\n    </RouterLink>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport Link from '../components/Link';\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n  txid,\r\n  type = 'info',\r\n  placement = 'bottomLeft',\r\n}: {\r\n  message: string;\r\n  description?: string | JSX.Element;\r\n  txid?: string;\r\n  type?: string;\r\n  placement?: string;\r\n}) {\r\n  if (txid) {\r\n    description = (\r\n      <Link\r\n        external\r\n        to={'https://explorer.solana.com/tx/' + txid}\r\n        style={{ color: '#0000ff' }}\r\n      >\r\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\r\n      </Link>\r\n    );\r\n  }\r\n  notification[type]({\r\n    message: <span style={{ color: 'black' }}>{message}</span>,\r\n    description: (\r\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\r\n    ),\r\n    placement,\r\n    style: {\r\n      backgroundColor: 'white',\r\n    },\r\n  });\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from './notifications';\r\nimport { useConnectionConfig } from './connection';\r\nimport { useLocalStorageState } from './utils';\r\nimport {WalletContextValues} from \"./types\";\r\n\r\nexport const WALLET_PROVIDERS = [\r\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\r\n];\r\n\r\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const { endpoint } = useConnectionConfig();\r\n\r\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\r\n    'walletProvider',\r\n    'https://www.sollet.io',\r\n  );\r\n  let providerUrl;\r\n  if (!savedProviderUrl) {\r\n    providerUrl = 'https://www.sollet.io';\r\n  } else {\r\n    providerUrl = savedProviderUrl;\r\n  }\r\n\r\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\r\n    providerUrl,\r\n    endpoint,\r\n  ]);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('trying to connect');\r\n    wallet.on('connect', () => {\r\n      console.log('connected');\r\n      setConnected(true);\r\n      let walletPublicKey = wallet.publicKey.toBase58();\r\n      let keyToDisplay =\r\n        walletPublicKey.length > 20\r\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\r\n              walletPublicKey.length - 7,\r\n              walletPublicKey.length,\r\n            )}`\r\n          : walletPublicKey;\r\n      notify({\r\n        message: 'Wallet update',\r\n        description: 'Connected to wallet ' + keyToDisplay,\r\n      });\r\n    });\r\n    wallet.on('disconnect', () => {\r\n      setConnected(false);\r\n      notify({\r\n        message: 'Wallet update',\r\n        description: 'Disconnected from wallet',\r\n      });\r\n    });\r\n    return () => {\r\n      wallet.disconnect();\r\n      setConnected(false);\r\n    };\r\n  }, [wallet]);\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        connected,\r\n        providerUrl,\r\n        setProviderUrl,\r\n        providerName:\r\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n          providerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context')\r\n  }\r\n  return {\r\n    connected: context.connected,\r\n    wallet: context.wallet,\r\n    providerUrl: context.providerUrl,\r\n    setProvider: context.setProviderUrl,\r\n    providerName: context.providerName,\r\n  };\r\n}\r\n","import { notify } from './notifications';\r\nimport { getDecimalCount, sleep } from './utils';\r\nimport { getSelectedTokenAccountForMint } from './markets';\r\nimport {\r\n  Account, AccountInfo, Connection,\r\n  PublicKey, RpcResponseAndContext,\r\n  SystemProgram,\r\n  Transaction, TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport { BN } from 'bn.js';\r\nimport {\r\n  DexInstructions,\r\n  Market,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n  OpenOrders,\r\n} from '@project-serum/serum';\r\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\r\nimport {SelectedTokenAccounts, TokenAccount} from \"./types\";\r\nimport {Order} from \"@project-serum/serum/lib/market\";\r\nimport {Buffer} from \"buffer\";\r\nimport assert from \"assert\";\r\nimport { struct } from \"superstruct\";\r\n\r\nexport async function createTokenAccountTransaction({\r\n  connection,\r\n  wallet,\r\n  mintPublicKey,\r\n} : {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  mintPublicKey: PublicKey;\r\n}): Promise<{\r\n  transaction: Transaction;\r\n  signer: Account;\r\n  newAccountPubkey: PublicKey;\r\n}> {\r\n  const newAccount = new Account();\r\n  const transaction = SystemProgram.createAccount({\r\n    fromPubkey: wallet.publicKey,\r\n    newAccountPubkey: newAccount.publicKey,\r\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n    space: 165,\r\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n  });\r\n  transaction.add(\r\n    TokenInstructions.initializeAccount({\r\n      account: newAccount.publicKey,\r\n      mint: mintPublicKey,\r\n      owner: wallet.publicKey,\r\n    }),\r\n  );\r\n  return {\r\n    transaction,\r\n    signer: newAccount,\r\n    newAccountPubkey: newAccount.publicKey,\r\n  };\r\n}\r\n\r\nexport async function settleFunds({\r\n  market,\r\n  openOrders,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n} : {\r\n  market: Market;\r\n  openOrders: OpenOrders;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseCurrencyAccount: TokenAccount;\r\n  quoteCurrencyAccount: TokenAccount;\r\n}): Promise<string | undefined> {\r\n  if (\r\n    !market ||\r\n    !wallet ||\r\n    !connection ||\r\n    !openOrders ||\r\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\r\n  ) {\r\n    notify({ message: 'Not connected' });\r\n    return;\r\n  }\r\n\r\n  let createAccountTransaction: Transaction | undefined;\r\n  let createAccountSigner: Account | undefined;\r\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\r\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\r\n\r\n  if (!baseCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  if (!quoteCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  let referrerQuoteWallet: PublicKey | null = null;\r\n  if (market.supportsReferralFees) {\r\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT')\r\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC')\r\n    if (\r\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\r\n      usdt &&\r\n      market.quoteMintAddress.equals(usdt.address)\r\n    ) {\r\n      referrerQuoteWallet = new PublicKey(\r\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\r\n      );\r\n    } else if (\r\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\r\n      usdc &&\r\n      market.quoteMintAddress.equals(usdc.address)\r\n    ) {\r\n      referrerQuoteWallet = new PublicKey(\r\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\r\n      );\r\n    }\r\n  }\r\n  const {\r\n    transaction: settleFundsTransaction,\r\n    signers: settleFundsSigners,\r\n  } = await market.makeSettleFundsTransaction(\r\n    connection,\r\n    openOrders,\r\n    baseCurrencyAccountPubkey,\r\n    quoteCurrencyAccountPubkey,\r\n    referrerQuoteWallet,\r\n  );\r\n\r\n  let transaction = mergeTransactions([\r\n    createAccountTransaction,\r\n    settleFundsTransaction,\r\n  ]);\r\n  let signers = createAccountSigner\r\n    ? [...settleFundsSigners, createAccountSigner]\r\n    : settleFundsSigners;\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Settling funds...',\r\n  });\r\n}\r\n\r\nexport async function settleAllFunds({\r\n  connection,\r\n  wallet,\r\n  tokenAccounts,\r\n  markets,\r\n  selectedTokenAccounts,\r\n} : {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  tokenAccounts: TokenAccount[];\r\n  markets: Market[];\r\n  selectedTokenAccounts?: SelectedTokenAccounts;\r\n}) {\r\n  if (!markets || !wallet || !connection || !tokenAccounts) {\r\n    return;\r\n  }\r\n\r\n  const programIds: PublicKey[] = [];\r\n  markets\r\n    .reduce((cumulative, m) => {\r\n      // @ts-ignore\r\n      cumulative.push(m._programId);\r\n      return cumulative;\r\n    }, [])\r\n    .forEach((programId) => {\r\n      if (!programIds.find((p) => p.equals(programId))) {\r\n        programIds.push(programId);\r\n      }\r\n    });\r\n\r\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\r\n    const openOrdersAccounts = await OpenOrders.findForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n      programId,\r\n    );\r\n    return openOrdersAccounts.filter(\r\n      (openOrders) =>\r\n        openOrders.baseTokenFree.toNumber() ||\r\n        openOrders.quoteTokenFree.toNumber(),\r\n    );\r\n  };\r\n\r\n  const openOrdersAccountsForProgramIds = await Promise.all(\r\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\r\n  );\r\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\r\n    (accounts, current) => accounts.concat(current),\r\n    [],\r\n  );\r\n\r\n  const settleTransactions = (await Promise.all(\r\n    openOrdersAccounts.map((openOrdersAccount) => {\r\n      const market = markets.find((m) =>\r\n        // @ts-ignore\r\n        m._decoded?.ownAddress?.equals(openOrdersAccount.market),\r\n      );\r\n      const baseMint = market?.baseMintAddress;\r\n      const quoteMint = market?.quoteMintAddress;\r\n\r\n      const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        baseMint,\r\n        baseMint && selectedTokenAccounts && selectedTokenAccounts[baseMint.toBase58()]\r\n      )?.pubkey;\r\n      const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        quoteMint,\r\n        quoteMint && selectedTokenAccounts && selectedTokenAccounts[quoteMint.toBase58()]\r\n      )?.pubkey;\r\n      if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\r\n        return null;\r\n      }\r\n      return (\r\n        market &&\r\n        market.makeSettleFundsTransaction(\r\n          connection,\r\n          openOrdersAccount,\r\n          selectedBaseTokenAccount,\r\n          selectedQuoteTokenAccount,\r\n        )\r\n      );\r\n    }),\r\n  )).filter((x): x is {signers: [PublicKey | Account]; transaction: Transaction} => !!x);\r\n  if (!settleTransactions || settleTransactions.length === 0) return;\r\n\r\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\r\n  const signers: Array<Account | PublicKey> = [];\r\n  settleTransactions\r\n    .reduce((cumulative: Array<Account | PublicKey>, t) => cumulative.concat(t.signers), [])\r\n    .forEach((signer) => {\r\n      if (!signers.find((s) => {\r\n        if (s.constructor.name !== signer.constructor.name) {\r\n          return false;\r\n        } else if (s.constructor.name === 'PublicKey') {\r\n          // @ts-ignore\r\n          return s.equals(signer);\r\n        } else {\r\n          // @ts-ignore\r\n          return s.publicKey.equals(signer.publicKey);\r\n        }\r\n      })) {\r\n        signers.push(signer);\r\n      }\r\n    });\r\n\r\n  const transaction = mergeTransactions(transactions);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n  });\r\n}\r\n\r\nexport async function cancelOrder(params: {market: Market; connection: Connection; wallet: Wallet; order: Order;}) {\r\n  return cancelOrders({ ...params, orders: [params.order] });\r\n}\r\n\r\nexport async function cancelOrders({ market, wallet, connection, orders }: {\r\n  market: Market;\r\n  wallet: Wallet;\r\n  connection: Connection;\r\n  orders: Order[];\r\n}) {\r\n  const transaction = market.makeMatchOrdersTransaction(5);\r\n  orders.forEach((order) => {\r\n    transaction.add(\r\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\r\n    );\r\n  });\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Sending cancel...',\r\n  });\r\n}\r\n\r\nexport async function placeOrder({\r\n  side,\r\n  price,\r\n  size,\r\n  orderType,\r\n  market,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n}: {\r\n  side: \"buy\" | \"sell\";\r\n  price: number;\r\n  size: number;\r\n  orderType: \"ioc\" | \"postOnly\" | \"limit\";\r\n  market: Market | undefined | null;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseCurrencyAccount: PublicKey | undefined;\r\n  quoteCurrencyAccount: PublicKey | undefined;\r\n}) {\r\n  let formattedMinOrderSize =\r\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\r\n    market?.minOrderSize;\r\n  let formattedTickSize =\r\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\r\n    market?.tickSize;\r\n  const isIncrement = (num, step) =>\r\n    Math.abs((num / step) % 1) < 1e-5 ||\r\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\r\n  if (isNaN(price)) {\r\n    notify({ message: 'Invalid price', type: 'error' });\r\n    return;\r\n  }\r\n  if (isNaN(size)) {\r\n    notify({ message: 'Invalid size', type: 'error' });\r\n    return;\r\n  }\r\n  if (!wallet || !wallet.publicKey) {\r\n    notify({ message: 'Connect wallet', type: 'error' });\r\n    return;\r\n  }\r\n  if (!market) {\r\n    notify({ message: 'Invalid  market', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(size, market.minOrderSize)) {\r\n    notify({\r\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (size < market.minOrderSize) {\r\n    notify({ message: 'Size too small', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(price, market.tickSize)) {\r\n    notify({\r\n      message: `Price must be an increment of ${formattedTickSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (price < market.tickSize) {\r\n    notify({ message: 'Price under tick size', type: 'error' });\r\n    return;\r\n  }\r\n  const owner = wallet.publicKey;\r\n\r\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\r\n  if (!payer) {\r\n    notify({\r\n      message: 'Need an SPL token account for cost currency',\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  const params = {\r\n    owner,\r\n    payer,\r\n    side,\r\n    price,\r\n    size,\r\n    orderType,\r\n  };\r\n  console.log(params);\r\n\r\n  const transaction = market.makeMatchOrdersTransaction(5);\r\n  let {\r\n    transaction: placeOrderTx,\r\n    signers,\r\n  } = await market.makePlaceOrderTransaction(\r\n    connection,\r\n    params,\r\n    10_000,\r\n    10_000,\r\n  );\r\n  transaction.add(placeOrderTx);\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    signers,\r\n    sendingMessage: 'Sending order...',\r\n  });\r\n}\r\n\r\nexport async function listMarket({\r\n  connection,\r\n  wallet,\r\n  baseMint,\r\n  quoteMint,\r\n  baseLotSize,\r\n  quoteLotSize,\r\n  dexProgramId,\r\n} : {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseMint: PublicKey;\r\n  quoteMint: PublicKey;\r\n  baseLotSize: number;\r\n  quoteLotSize: number;\r\n  dexProgramId: PublicKey;\r\n}) {\r\n  const market = new Account();\r\n  const requestQueue = new Account();\r\n  const eventQueue = new Account();\r\n  const bids = new Account();\r\n  const asks = new Account();\r\n  const baseVault = new Account();\r\n  const quoteVault = new Account();\r\n  const feeRateBps = 0;\r\n  const quoteDustThreshold = new BN(100);\r\n\r\n  async function getVaultOwnerAndNonce() {\r\n    const nonce = new BN(0);\r\n    while (true) {\r\n      try {\r\n        const vaultOwner = await PublicKey.createProgramAddress(\r\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\r\n          dexProgramId,\r\n        );\r\n        return [vaultOwner, nonce];\r\n      } catch (e) {\r\n        nonce.iaddn(1);\r\n      }\r\n    }\r\n  }\r\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\r\n\r\n  const tx1 = new Transaction();\r\n  tx1.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: baseVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: quoteVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: baseVault.publicKey,\r\n      mint: baseMint,\r\n      owner: vaultOwner,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: quoteVault.publicKey,\r\n      mint: quoteMint,\r\n      owner: vaultOwner,\r\n    }),\r\n  );\r\n\r\n  const tx2 = new Transaction();\r\n  tx2.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: market.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(\r\n        Market.getLayout(dexProgramId).span,\r\n      ),\r\n      space: Market.getLayout(dexProgramId).span,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: requestQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\r\n      space: 5120 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: eventQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\r\n      space: 262144 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: bids.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: asks.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    DexInstructions.initializeMarket({\r\n      market: market.publicKey,\r\n      requestQueue: requestQueue.publicKey,\r\n      eventQueue: eventQueue.publicKey,\r\n      bids: bids.publicKey,\r\n      asks: asks.publicKey,\r\n      baseVault: baseVault.publicKey,\r\n      quoteVault: quoteVault.publicKey,\r\n      baseMint,\r\n      quoteMint,\r\n      baseLotSize: new BN(baseLotSize),\r\n      quoteLotSize: new BN(quoteLotSize),\r\n      feeRateBps,\r\n      vaultSignerNonce,\r\n      quoteDustThreshold,\r\n      programId: dexProgramId,\r\n    }),\r\n  );\r\n\r\n  const signedTransactions = await Promise.all([\r\n    signTransaction({\r\n      transaction: tx1,\r\n      wallet,\r\n      connection,\r\n      signers: [wallet.publicKey, baseVault, quoteVault],\r\n    }),\r\n    signTransaction({\r\n      transaction: tx2,\r\n      wallet,\r\n      connection,\r\n      signers: [wallet.publicKey, market, requestQueue, eventQueue, bids, asks],\r\n    }),\r\n  ]);\r\n  for (let signedTransaction of signedTransactions) {\r\n    await sendSignedTransaction({\r\n      signedTransaction,\r\n      connection,\r\n    });\r\n  }\r\n\r\n  return market.publicKey;\r\n}\r\n\r\nconst getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nasync function sendTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [wallet.publicKey],\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n} : {\r\n  transaction: Transaction;\r\n  wallet: Wallet;\r\n  signers?: Array<PublicKey | Account>;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<string> {\r\n  const signedTransaction = await signTransaction({\r\n    transaction,\r\n    wallet,\r\n    signers,\r\n    connection,\r\n  });\r\n  return await sendSignedTransaction({\r\n    signedTransaction,\r\n    connection,\r\n    sendingMessage,\r\n    sentMessage,\r\n    successMessage,\r\n    timeout,\r\n  });\r\n}\r\n\r\nasync function signTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [wallet.publicKey],\r\n  connection,\r\n} : {\r\n  transaction: Transaction;\r\n  wallet: Wallet;\r\n  signers: Array<Account | PublicKey>;\r\n  connection: Connection;\r\n}) {\r\n  transaction.recentBlockhash = (\r\n    await connection.getRecentBlockhash('max')\r\n  ).blockhash;\r\n  transaction.signPartial(...signers);\r\n  return await wallet.signTransaction(transaction);\r\n}\r\n\r\nasync function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n} : {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<string> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  notify({ message: sendingMessage });\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(rawTransaction, {\r\n    skipPreflight: true,\r\n  });\r\n  notify({ message: sentMessage, type: 'success', txid });\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(300);\r\n    }\r\n  })();\r\n  try {\r\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\r\n  } catch (err) {\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n  notify({ message: successMessage, type: 'success', txid });\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return txid;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n) {\r\n  let done = false;\r\n  const result = await new Promise((resolve, reject) => {\r\n    (async () => {\r\n      setTimeout(() => {\r\n        if (done) {\r\n          return;\r\n        }\r\n        done = true;\r\n        console.log('Timed out for txid', txid);\r\n        reject({ timeout: true });\r\n      }, timeout);\r\n      try {\r\n        connection.onSignature(\r\n          txid,\r\n          (result) => {\r\n            console.log('WS confirmed', txid, result);\r\n            done = true;\r\n            if (result.err) {\r\n              reject(result.err);\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          'recent',\r\n        );\r\n        console.log('Set up WS connection', txid);\r\n      } catch (e) {\r\n        done = true;\r\n        console.log('WS error in setup', txid, e);\r\n      }\r\n      while (!done) {\r\n        // eslint-disable-next-line no-loop-func\r\n        (async () => {\r\n          try {\r\n            const signatureStatuses = await connection.getSignatureStatuses([\r\n              txid,\r\n            ]);\r\n            const result = signatureStatuses && signatureStatuses.value[0];\r\n            if (!done) {\r\n              if (!result) {\r\n                console.log('REST null result for', txid, result);\r\n              } else if (result.err) {\r\n                console.log('REST error for', txid, result);\r\n                done = true;\r\n                reject(result.err);\r\n              } else if (!result.confirmations) {\r\n                console.log('REST no confirmations for', txid, result);\r\n              } else {\r\n                console.log('REST confirmation for', txid, result);\r\n                done = true;\r\n                resolve(result);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (!done) {\r\n              console.log('REST connection error: txid', txid, e);\r\n            }\r\n          }\r\n        })();\r\n        await sleep(300);\r\n      }\r\n    })();\r\n  });\r\n  done = true;\r\n  return result;\r\n}\r\n\r\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\r\n  const transaction = new Transaction();\r\n  transactions\r\n    .filter((t): t is Transaction => t !== undefined)\r\n    .forEach((t) => {\r\n      transaction.add(t);\r\n    });\r\n  return transaction;\r\n}\r\n\r\nfunction jsonRpcResult(resultDescription: any) {\r\n  const jsonRpcVersion = struct.literal(\"2.0\");\r\n  return struct.union([\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: \"string\",\r\n      error: \"any\",\r\n    }),\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: \"string\",\r\n      error: \"null?\",\r\n      result: resultDescription,\r\n    }),\r\n  ]);\r\n}\r\n\r\nfunction jsonRpcResultAndContext(resultDescription: any) {\r\n  return jsonRpcResult({\r\n    context: struct({\r\n      slot: \"number\",\r\n    }),\r\n    value: resultDescription,\r\n  });\r\n}\r\n\r\nconst AccountInfoResult = struct({\r\n  executable: \"boolean\",\r\n  owner: \"string\",\r\n  lamports: \"number\",\r\n  data: \"any\",\r\n  rentEpoch: \"number?\",\r\n});\r\n\r\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\r\n  struct.array([struct.union([\"null\", AccountInfoResult])])\r\n);\r\n\r\nexport async function getMultipleSolanaAccounts(\r\n  connection: Connection,\r\n  publicKeys: PublicKey[]\r\n): Promise<\r\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\r\n> {\r\n  const args = [\r\n    publicKeys.map((k) => k.toBase58()),\r\n    { commitment: \"recent\" },\r\n  ];\r\n  // @ts-ignore\r\n  const unsafeRes = await connection._rpcRequest(\"getMultipleAccounts\", args);\r\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\r\n  if (res.error) {\r\n    throw new Error(\r\n      \"failed to get info about accounts \" +\r\n        publicKeys.map((k) => k.toBase58()).join(\", \") +\r\n        \": \" +\r\n        res.error.message\r\n    );\r\n  }\r\n  assert(typeof res.result !== \"undefined\");\r\n  const accounts: Array<{\r\n    executable: any;\r\n    owner: PublicKey;\r\n    lamports: any;\r\n    data: Buffer;\r\n  } | null> = [];\r\n  for (const account of res.result.value) {\r\n    let value: {\r\n      executable: any;\r\n      owner: PublicKey;\r\n      lamports: any;\r\n      data: Buffer;\r\n    } | null = null;\r\n    if (res.result.value) {\r\n      const { executable, owner, lamports, data } = account;\r\n      assert(data[1] === \"base64\");\r\n      value = {\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n        data: Buffer.from(data[0], \"base64\"),\r\n      };\r\n    }\r\n    accounts.push(value);\r\n  }\r\n  return {\r\n    context: {\r\n      slot: res.result.context.slot,\r\n    },\r\n    value: Object.fromEntries(\r\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account])\r\n    ),\r\n  };\r\n}\r\n","import * as BufferLayout from 'buffer-layout';\r\nimport bs58 from 'bs58';\r\nimport {AccountInfo, Connection, PublicKey} from '@solana/web3.js';\r\nimport {WRAPPED_SOL_MINT} from '@project-serum/serum/lib/token-instructions';\r\nimport {TokenAccount} from \"./types\";\r\nimport {TOKEN_MINTS} from \"@project-serum/serum\";\r\nimport {useAllMarkets, useMarket, useTokenAccounts} from \"./markets\";\r\nimport {getMultipleSolanaAccounts} from \"./send\";\r\nimport {useConnection} from \"./connection\";\r\nimport {useAsyncData} from \"./fetch-loop\";\r\nimport tuple from 'immutable-tuple';\r\n\r\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(32, 'mint'),\r\n  BufferLayout.blob(32, 'owner'),\r\n  BufferLayout.nu64('amount'),\r\n  BufferLayout.blob(93),\r\n]);\r\n\r\nexport const MINT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(44),\r\n  BufferLayout.u8('decimals'),\r\n  BufferLayout.u8('initialized'),\r\n  BufferLayout.blob(36),\r\n]);\r\n\r\nexport function parseTokenAccountData(\r\n  data: Buffer\r\n): { mint: PublicKey; owner: PublicKey; amount: number } {\r\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\r\n  return {\r\n    mint: new PublicKey(mint),\r\n    owner: new PublicKey(owner),\r\n    amount,\r\n  };\r\n}\r\n\r\nexport function parseTokenMintData(data) {\r\n  let { decimals, initialized } = MINT_LAYOUT.decode(data);\r\n  return { decimals, initialized };\r\n}\r\n\r\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\r\n  return [\r\n    {\r\n      memcmp: {\r\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\r\n        bytes: publicKey.toBase58(),\r\n      },\r\n    },\r\n    {\r\n      dataSize: ACCOUNT_LAYOUT.span,\r\n    },\r\n  ];\r\n}\r\n\r\nexport const TOKEN_PROGRAM_ID = new PublicKey(\r\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\r\n);\r\n\r\nexport async function getOwnedTokenAccounts(\r\n    connection: Connection, publicKey: PublicKey\r\n): Promise<Array<{publicKey: PublicKey, accountInfo: AccountInfo<Buffer>}>> {\r\n  let filters = getOwnedAccountsFilters(publicKey);\r\n  // @ts-ignore\r\n  let resp = await connection._rpcRequest('getProgramAccounts', [\r\n    TOKEN_PROGRAM_ID.toBase58(),\r\n    {\r\n      commitment: connection.commitment,\r\n      filters,\r\n    },\r\n  ]);\r\n  if (resp.error) {\r\n    throw new Error(\r\n      'failed to get token accounts owned by ' +\r\n        publicKey.toBase58() +\r\n        ': ' +\r\n        resp.error.message,\r\n    );\r\n  }\r\n  return resp.result\r\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\r\n      publicKey: new PublicKey(pubkey),\r\n      accountInfo: {\r\n        data: bs58.decode(data),\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n      },\r\n    }))\r\n    .filter(({ accountInfo }) => {\r\n      // TODO: remove this check once mainnet is updated\r\n      return filters.every((filter) => {\r\n        if (filter.dataSize) {\r\n          return accountInfo.data.length === filter.dataSize;\r\n        } else if (filter.memcmp) {\r\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\r\n          return accountInfo.data\r\n            .slice(\r\n              filter.memcmp.offset,\r\n              filter.memcmp.offset + filterBytes.length,\r\n            )\r\n            .equals(filterBytes);\r\n        }\r\n        return false;\r\n      });\r\n    });\r\n}\r\n\r\nexport async function getTokenAccountInfo(connection: Connection, ownerAddress: PublicKey) {\r\n  let [splAccounts, account] = await Promise.all([\r\n    getOwnedTokenAccounts(connection, ownerAddress),\r\n    connection.getAccountInfo(ownerAddress),\r\n  ]);\r\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(({ publicKey, accountInfo }) => {\r\n    return {\r\n      pubkey: publicKey,\r\n      account: accountInfo,\r\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\r\n    };\r\n  });\r\n  return parsedSplAccounts.concat({\r\n    pubkey: ownerAddress,\r\n    account,\r\n    effectiveMint: WRAPPED_SOL_MINT,\r\n  });\r\n}\r\n\r\nexport function useMintToTickers(): { [mint: string]: string; } {\r\n  const { customMarkets } = useMarket();\r\n  const [markets] = useAllMarkets(customMarkets);\r\n  const mintsToTickers = Object.fromEntries(TOKEN_MINTS.map(mint => [mint.address.toBase58(), mint.name]));\r\n  for (let market of (markets || [])) {\r\n    const customMarketInfo = customMarkets.find(\r\n      customMarket => customMarket.address === market.market.address.toBase58()\r\n    );\r\n    if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\r\n      if (customMarketInfo) {\r\n        mintsToTickers[market.market.baseMintAddress.toBase58()] = customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\r\n      }\r\n    }\r\n    if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\r\n      if (customMarketInfo) {\r\n        mintsToTickers[market.market.quoteMintAddress.toBase58()] = customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\r\n      }\r\n    }\r\n  }\r\n  return mintsToTickers;\r\n}\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\nexport function useMintInfos(): [\r\n  {[mintAddress: string]: {decimals: number; initialized: boolean} | null} | null | undefined,\r\n  boolean\r\n] {\r\n  const connection = useConnection();\r\n  const {customMarkets} = useMarket();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [allMarkets] = useAllMarkets(customMarkets);\r\n\r\n  const allMints = (tokenAccounts || []).map(account => account.effectiveMint).concat(\r\n    (allMarkets || []).map(marketInfo => marketInfo.market.baseMintAddress)\r\n  ).concat(\r\n    (allMarkets || []).map(marketInfo => marketInfo.market.quoteMintAddress)\r\n  );\r\n  const uniqueMints = [...new Set(allMints.map(mint => mint.toBase58()))].map(stringMint => new PublicKey(stringMint))\r\n\r\n  const getAllMintInfo = async () => {\r\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\r\n    return Object.fromEntries(Object.entries(mintInfos.value).map(\r\n      ([key, accountInfo]) => [\r\n        key,\r\n        accountInfo && parseTokenMintData(accountInfo.data)\r\n      ]\r\n    ));\r\n  }\r\n\r\n  return useAsyncData(\r\n    getAllMintInfo,\r\n    tuple(\r\n      'getAllMintInfo',\r\n      connection,\r\n      (tokenAccounts || []).length,\r\n      (allMarkets || []).length,\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n","import { BonfidaTrade } from './types';\r\n\r\nexport default class BonfidaApi {\r\n  static URL: string = 'https://serum-api.bonfida.com/';\r\n\r\n  static async get(path: string) {\r\n    try {\r\n      const response = await fetch(\r\n        this.URL + path,\r\n      );\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success ? responseJson.data : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static async getRecentTrades(\r\n    marketAddress: string,\r\n  ): Promise<BonfidaTrade[] | null> {\r\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\r\n  }\r\n}\r\n","import {\r\n  decodeEventQueue,\r\n  Market,\r\n  MARKETS,\r\n  OpenOrders,\r\n  Orderbook,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n} from '@project-serum/serum';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  divideBnToNumber,\r\n  floorToDecimal,\r\n  getTokenMultiplierFromDecimals,\r\n  useLocalStorageState,\r\n} from './utils';\r\nimport { refreshCache, useAsyncData } from './fetch-loop';\r\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\r\nimport { useWallet } from './wallet';\r\nimport tuple from 'immutable-tuple';\r\nimport { notify } from './notifications';\r\nimport { BN } from 'bn.js';\r\nimport {\r\n  getTokenAccountInfo,\r\n  parseTokenAccountData,\r\n  useMintInfos,\r\n} from './tokens';\r\nimport {\r\n  Balances,\r\n  CustomMarketInfo,\r\n  DeprecatedOpenOrdersBalances,\r\n  FullMarketInfo,\r\n  MarketContextValues,\r\n  MarketInfo,\r\n  OrderWithMarketAndMarketName,\r\n  SelectedTokenAccounts,\r\n  TokenAccount,\r\n  Trade,\r\n} from './types';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport BonfidaApi from './bonfidaConnector';\r\n\r\n// Used in debugging, should be false in production\r\nconst _IGNORE_DEPRECATED = false;\r\n\r\nconst USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\r\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\r\n  : MARKETS;\r\n\r\nexport function useMarketsList() {\r\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\r\n}\r\n\r\nexport function useAllMarkets(customMarkets) {\r\n  const connection = useConnection();\r\n\r\n  const getAllMarkets = async () => {\r\n    const markets: Array<{\r\n      market: Market;\r\n      marketName: string;\r\n      programId: PublicKey;\r\n    } | null> = await Promise.all(\r\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\r\n        try {\r\n          const market = await Market.load(\r\n            connection,\r\n            marketInfo.address,\r\n            {},\r\n            marketInfo.programId,\r\n          );\r\n          return {\r\n            market,\r\n            marketName: marketInfo.name,\r\n            programId: marketInfo.programId,\r\n          };\r\n        } catch (e) {\r\n          notify({\r\n            message: 'Error loading all market',\r\n            description: e.message,\r\n            type: 'error',\r\n          });\r\n          return null;\r\n        }\r\n      }),\r\n    );\r\n    return markets.filter(\r\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\r\n        !!m,\r\n    );\r\n  };\r\n  return useAsyncData(\r\n    getAllMarkets,\r\n    tuple('getAllMarkets', customMarkets.length, connection),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useUnmigratedOpenOrdersAccounts() {\r\n  const connection = useConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\r\n    if (!wallet || !connection || !wallet.publicKey) {\r\n      return [];\r\n    }\r\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\r\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\r\n    const deprecatedProgramIds = Array.from(\r\n      new Set(\r\n        USE_MARKETS.filter(\r\n          ({ deprecated }) => deprecated,\r\n        ).map(({ programId }) => programId.toBase58()),\r\n      ),\r\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\r\n    let programId: PublicKey;\r\n    for (programId of deprecatedProgramIds) {\r\n      try {\r\n        const openOrdersAccounts = await OpenOrders.findForOwner(\r\n          connection,\r\n          wallet.publicKey,\r\n          programId,\r\n        );\r\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\r\n          openOrdersAccounts\r\n            .filter(\r\n              (openOrders) =>\r\n                openOrders.baseTokenTotal.toNumber() ||\r\n                openOrders.quoteTokenTotal.toNumber(),\r\n            )\r\n            .filter((openOrders) =>\r\n              USE_MARKETS.some(\r\n                (market) =>\r\n                  market.deprecated && market.address.equals(openOrders.market),\r\n              ),\r\n            ),\r\n        );\r\n      } catch (e) {\r\n        console.log(\r\n          'Error loading deprecated markets',\r\n          programId?.toBase58(),\r\n          e.message,\r\n        );\r\n      }\r\n    }\r\n    // Maybe sort\r\n    return deprecatedOpenOrdersAccounts;\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getUnmigratedOpenOrdersAccounts',\r\n    connection,\r\n    wallet?.publicKey?.toBase58(),\r\n  );\r\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n\r\n  return {\r\n    accounts,\r\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\r\n  };\r\n}\r\n\r\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\r\n  null,\r\n);\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\n// For things that don't really change\r\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\r\n\r\n// For things that change frequently\r\nconst _FAST_REFRESH_INTERVAL = 1000;\r\n\r\nexport const DEFAULT_MARKET = USE_MARKETS.find(\r\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\r\n);\r\n\r\nexport function getMarketDetails(\r\n  market: Market | undefined | null,\r\n  customMarkets: CustomMarketInfo[],\r\n): FullMarketInfo {\r\n  if (!market) {\r\n    return {};\r\n  }\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo = marketInfos.find((otherMarket) =>\r\n    otherMarket.address.equals(market.address),\r\n  );\r\n  const baseCurrency =\r\n    (market?.baseMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\r\n    'UNKNOWN';\r\n  const quoteCurrency =\r\n    (market?.quoteMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\r\n    'UNKNOWN';\r\n\r\n  return {\r\n    ...marketInfo,\r\n    marketName: marketInfo?.name,\r\n    baseCurrency,\r\n    quoteCurrency,\r\n    marketInfo,\r\n  };\r\n}\r\n\r\nexport function MarketProvider({ children }) {\r\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\r\n    'marketAddress',\r\n    DEFAULT_MARKET?.address.toBase58(),\r\n  );\r\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\r\n    CustomMarketInfo[]\r\n  >('customMarkets', []);\r\n\r\n  const address = marketAddress && new PublicKey(marketAddress);\r\n  const connection = useConnection();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo =\r\n    address && marketInfos.find((market) => market.address.equals(address));\r\n\r\n  // Replace existing market with a non-deprecated one on first load\r\n  useEffect(() => {\r\n    if (marketInfo && marketInfo.deprecated) {\r\n      console.log('Switching markets from deprecated', marketInfo);\r\n      if (DEFAULT_MARKET) {\r\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [market, setMarket] = useState<Market | null>();\r\n  useEffect(() => {\r\n    if (\r\n      market &&\r\n      marketInfo &&\r\n      // @ts-ignore\r\n      market._decoded.ownAddress?.equals(marketInfo?.address)\r\n    ) {\r\n      return;\r\n    }\r\n    setMarket(null);\r\n    if (!marketInfo || !marketInfo.address) {\r\n      notify({\r\n        message: 'Error loading market',\r\n        description: 'Please select a market from the dropdown',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\r\n      .then(setMarket)\r\n      .catch((e) =>\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        }),\r\n      );\r\n    // eslint-disable-next-line\r\n  }, [connection, marketInfo]);\r\n\r\n  return (\r\n    <MarketContext.Provider\r\n      value={{\r\n        market,\r\n        ...getMarketDetails(market, customMarkets),\r\n        setMarketAddress,\r\n        customMarkets,\r\n        setCustomMarkets,\r\n      }}\r\n    >\r\n      {children}\r\n    </MarketContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useSelectedTokenAccounts(): [\r\n  SelectedTokenAccounts,\r\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\r\n] {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\r\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\r\n}\r\n\r\nexport function useMarket() {\r\n  const context = useContext(MarketContext);\r\n  if (!context) {\r\n    throw new Error('Missing market context');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useMarkPrice() {\r\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\r\n\r\n  const [orderbook] = useOrderbook();\r\n  const trades = useTrades();\r\n\r\n  useEffect(() => {\r\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\r\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\r\n    let last = trades && trades.length > 0 && trades[0].price;\r\n\r\n    let markPrice =\r\n      bb && ba\r\n        ? last\r\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\r\n          : (bb + ba) / 2\r\n        : null;\r\n\r\n    setMarkPrice(markPrice);\r\n  }, [orderbook, trades]);\r\n\r\n  return markPrice;\r\n}\r\n\r\nexport function _useUnfilteredTrades(limit = 10000) {\r\n  const { market } = useMarket();\r\n  const connection = useConnection();\r\n  async function getUnfilteredTrades(): Promise<any[] | null> {\r\n    if (!market || !connection) {\r\n      return null;\r\n    }\r\n    return await market.loadFills(connection, limit);\r\n  }\r\n  const [trades] = useAsyncData(\r\n    getUnfilteredTrades,\r\n    tuple('getUnfilteredTrades', market, connection),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n  return trades;\r\n  // NOTE: For now, websocket is too expensive since the event queue is large\r\n  // and updates very frequently\r\n\r\n  // let data = useAccountData(market && market._decoded.eventQueue);\r\n  // if (!data) {\r\n  //   return null;\r\n  // }\r\n  // const events = decodeEventQueue(data, limit);\r\n  // return events\r\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\r\n  //   .map(market.parseFillEvent.bind(market));\r\n}\r\n\r\nexport function useBonfidaTrades() {\r\n  const { market } = useMarket();\r\n  const marketAddress = market?.address.toBase58();\r\n\r\n  async function getBonfidaTrades() {\r\n    if (!marketAddress) {\r\n      return null;\r\n    }\r\n    return await BonfidaApi.getRecentTrades(marketAddress);\r\n  }\r\n\r\n  return useAsyncData(\r\n    getBonfidaTrades,\r\n    tuple('getBonfidaTrades', marketAddress),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n    false,\r\n  );\r\n}\r\n\r\nexport function useOrderbookAccounts() {\r\n  const { market } = useMarket();\r\n  // @ts-ignore\r\n  let bidData = useAccountData(market && market._decoded.bids);\r\n  // @ts-ignore\r\n  let askData = useAccountData(market && market._decoded.asks);\r\n  return {\r\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\r\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\r\n  };\r\n}\r\n\r\nexport function useOrderbook(\r\n  depth = 20,\r\n): [{ bids: number[][]; asks: number[][] }, boolean] {\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  const { market } = useMarket();\r\n  const bids =\r\n    !bidOrderbook || !market\r\n      ? []\r\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  const asks =\r\n    !askOrderbook || !market\r\n      ? []\r\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  return [{ bids, asks }, !!bids || !!asks];\r\n}\r\n\r\n// Want the balances table to be fast-updating, dont want open orders to flicker\r\n// TODO: Update to use websocket\r\nexport function useOpenOrdersAccounts(fast = false) {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getOpenOrdersAccounts() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findOpenOrdersAccountsForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n  }\r\n  return useAsyncData(\r\n    getOpenOrdersAccounts,\r\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\r\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useSelectedOpenOrdersAccount(fast = false) {\r\n  const [accounts] = useOpenOrdersAccounts(fast);\r\n  if (!accounts) {\r\n    return null;\r\n  }\r\n  return accounts[0];\r\n}\r\n\r\nexport function useTokenAccounts(): [\r\n  TokenAccount[] | null | undefined,\r\n  boolean,\r\n] {\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getTokenAccounts() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    return await getTokenAccountInfo(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getTokenAccounts,\r\n    tuple('getTokenAccounts', wallet, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function getSelectedTokenAccountForMint(\r\n  accounts: TokenAccount[] | undefined | null,\r\n  mint: PublicKey | undefined,\r\n  selectedPubKey?: string | PublicKey | null,\r\n) {\r\n  if (!accounts || !mint) {\r\n    return null;\r\n  }\r\n  const filtered = accounts.filter(\r\n    ({ effectiveMint, pubkey }) =>\r\n      mint.equals(effectiveMint) &&\r\n      (!selectedPubKey ||\r\n        (typeof selectedPubKey === 'string'\r\n          ? selectedPubKey\r\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\r\n  );\r\n  return filtered && filtered[0];\r\n}\r\n\r\nexport function useSelectedQuoteCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.quoteMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\nexport function useSelectedBaseCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.baseMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedQuoteCurrencyBalances() {\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\r\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.quoteSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedBaseCurrencyBalances() {\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\r\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.baseSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\nexport function useOpenOrders() {\r\n  const { market, marketName } = useMarket();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\r\n    return null;\r\n  }\r\n  return market\r\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\r\n    .map((order) => ({ ...order, marketName, market }));\r\n}\r\n\r\nexport function useTrades(limit = 100) {\r\n  const trades = _useUnfilteredTrades(limit);\r\n  if (!trades) {\r\n    return null;\r\n  }\r\n  // Until partial fills are each given their own fill, use maker fills\r\n  return trades\r\n    .filter(({ eventFlags }) => eventFlags.maker)\r\n    .map((trade) => ({\r\n      ...trade,\r\n      side: trade.side === 'buy' ? 'sell' : 'buy',\r\n    }));\r\n}\r\n\r\nexport function useFeeDiscountKeys(): [\r\n  (\r\n    | {\r\n        pubkey: PublicKey;\r\n        feeTier: number;\r\n        balance: number;\r\n        mint: PublicKey;\r\n      }[]\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getFeeDiscountKeys() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getFeeDiscountKeys,\r\n    tuple('getFeeDiscountKeys', wallet, market, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useFills(limit = 100) {\r\n  const { marketName } = useMarket();\r\n  const fills = _useUnfilteredTrades(limit);\r\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\r\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\r\n    return null;\r\n  }\r\n  if (!fills) {\r\n    return null;\r\n  }\r\n  return fills\r\n    .filter((fill) =>\r\n      openOrdersAccounts.some((openOrdersAccount) =>\r\n        fill.openOrders.equals(openOrdersAccount.publicKey),\r\n      ),\r\n    )\r\n    .map((fill) => ({ ...fill, marketName }));\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useFillsForAllMarkets(limit = 100) {\r\n  const { connected, wallet } = useWallet();\r\n\r\n  const connection = useConnection();\r\n  // todo: add custom markets\r\n  const allMarkets = useAllMarkets([]);\r\n\r\n  async function getFillsForAllMarkets() {\r\n    let fills: Trade[] = [];\r\n    if (!connected) {\r\n      return fills;\r\n    }\r\n\r\n    let marketData;\r\n    for (marketData of allMarkets) {\r\n      const { market, marketName } = marketData;\r\n      if (!market) {\r\n        return fills;\r\n      }\r\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\r\n        connection,\r\n        wallet.publicKey,\r\n      );\r\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\r\n      if (!openOrdersAccount) {\r\n        return fills;\r\n      }\r\n      const eventQueueData = await connection.getAccountInfo(\r\n        market && market._decoded.eventQueue,\r\n      );\r\n      let data = eventQueueData?.data;\r\n      if (!data) {\r\n        return fills;\r\n      }\r\n      const events = decodeEventQueue(data, limit);\r\n      const fillsForMarket: Trade[] = events\r\n        .filter(\r\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\r\n        )\r\n        .map(market.parseFillEvent.bind(market));\r\n      const ownFillsForMarket = fillsForMarket\r\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\r\n        .map((fill) => ({ ...fill, marketName }));\r\n      fills = fills.concat(ownFillsForMarket);\r\n    }\r\n\r\n    console.log(JSON.stringify(fills));\r\n    return fills;\r\n  }\r\n\r\n  return useAsyncData(\r\n    getFillsForAllMarkets,\r\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\r\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersAccounts() {\r\n  const { wallet, connected } = useWallet();\r\n  const connection = useConnection();\r\n  const { customMarkets } = useMarket();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const programIds = [\r\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\r\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\r\n\r\n  const getAllOpenOrdersAccounts = async () => {\r\n    if (!connected) {\r\n      return [];\r\n    }\r\n    return (\r\n      await Promise.all(\r\n        programIds.map((programId) =>\r\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\r\n        ),\r\n      )\r\n    ).flat();\r\n  };\r\n  return useAsyncData(\r\n    getAllOpenOrdersAccounts,\r\n    tuple(\r\n      'getAllOpenOrdersAccounts',\r\n      connection,\r\n      connected,\r\n      wallet?.publicKey?.toBase58(),\r\n      customMarkets.length,\r\n      (programIds || []).length,\r\n    ),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersBalances() {\r\n  const [\r\n    openOrdersAccounts,\r\n    loadedOpenOrdersAccounts,\r\n  ] = useAllOpenOrdersAccounts();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n  const { customMarkets } = useMarket();\r\n  const [allMarkets] = useAllMarkets(customMarkets);\r\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\r\n    return {};\r\n  }\r\n\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\r\n  );\r\n  const openOrdersBalances: {\r\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketInfo = marketsByAddress[account.market.toBase58()];\r\n    const baseMint = marketInfo.market.baseMintAddress.toBase58();\r\n    const quoteMint = marketInfo.market.quoteMintAddress.toBase58();\r\n    if (!(baseMint in openOrdersBalances)) {\r\n      openOrdersBalances[baseMint] = [];\r\n    }\r\n    if (!(quoteMint in openOrdersBalances)) {\r\n      openOrdersBalances[quoteMint] = [];\r\n    }\r\n\r\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\r\n    const baseFree = divideBnToNumber(\r\n      new BN(account.baseTokenFree),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const baseTotal = divideBnToNumber(\r\n      new BN(account.baseTokenTotal),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\r\n    const quoteFree = divideBnToNumber(\r\n      new BN(account.quoteTokenFree),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n    const quoteTotal = divideBnToNumber(\r\n      new BN(account.quoteTokenTotal),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n\r\n    openOrdersBalances[baseMint].push({\r\n      market: marketInfo.market.publicKey,\r\n      free: baseFree,\r\n      total: baseTotal,\r\n    });\r\n    openOrdersBalances[quoteMint].push({\r\n      market: marketInfo.market.publicKey,\r\n      free: quoteFree,\r\n      total: quoteTotal,\r\n    });\r\n  }\r\n  return openOrdersBalances;\r\n}\r\n\r\nexport function useAllOpenOrders(): {\r\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const connection = useConnection();\r\n  const { connected } = useWallet();\r\n  const [\r\n    openOrdersAccounts,\r\n    openOrdersAccountsConnected,\r\n  ] = useAllOpenOrdersAccounts();\r\n  const { customMarkets } = useMarket();\r\n  const [marketInfos, marketInfosConnected] = useAllMarkets(customMarkets);\r\n  const openOrdersAccountsByAddress: {\r\n    [marketAddress: string]: OpenOrders[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketsAddr = account.market.toBase58();\r\n    if (!(marketsAddr in openOrdersAccountsByAddress)) {\r\n      openOrdersAccountsByAddress[marketsAddr] = [];\r\n    }\r\n    openOrdersAccountsByAddress[marketsAddr].push(account);\r\n  }\r\n  const marketsByAddress = Object.fromEntries(\r\n    (marketInfos || []).map((info) => [info.market.publicKey.toBase58(), info]),\r\n  );\r\n  const getAllOpenOrders = async () => {\r\n    return await Promise.all(\r\n      Object.keys(openOrdersAccountsByAddress).map(async (marketAddr) => {\r\n        const market = marketsByAddress[marketAddr].market;\r\n        const [bids, asks] = await Promise.all([\r\n          market.loadBids(connection),\r\n          market.loadAsks(connection),\r\n        ]);\r\n        return {\r\n          orders: market.filterForOpenOrders(\r\n            bids,\r\n            asks,\r\n            openOrdersAccountsByAddress[marketAddr],\r\n          ),\r\n          marketAddress: marketAddr,\r\n        };\r\n      }),\r\n    );\r\n  };\r\n  const cacheKey = tuple(\r\n    'getAllOpenOrders',\r\n    openOrdersAccountsConnected,\r\n    (openOrdersAccounts || []).length,\r\n    connection,\r\n    connected,\r\n    marketInfosConnected,\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(getAllOpenOrders, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalances(): Balances[] {\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const openOrders = useSelectedOpenOrdersAccount(true);\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseExists =\r\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\r\n  const quoteExists =\r\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\r\n  if (\r\n    baseCurrency === 'UNKNOWN' ||\r\n    quoteCurrency === 'UNKNOWN' ||\r\n    !baseCurrency ||\r\n    !quoteCurrency\r\n  ) {\r\n    return [];\r\n  }\r\n  return [\r\n    {\r\n      market,\r\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\r\n      coin: baseCurrency,\r\n      wallet: baseCurrencyBalances,\r\n      orders:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(\r\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n            )\r\n          : null,\r\n      openOrders,\r\n      unsettled:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\r\n          : null,\r\n    },\r\n    {\r\n      market,\r\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\r\n      coin: quoteCurrency,\r\n      wallet: quoteCurrencyBalances,\r\n      openOrders,\r\n      orders:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(\r\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n            )\r\n          : null,\r\n      unsettled:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\r\n          : null,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function useWalletBalancesForAllMarkets(): {\r\n  mint: string;\r\n  balance: number;\r\n}[] {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected } = useWallet();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n\r\n  if (!connected || !mintInfosConnected) {\r\n    return [];\r\n  }\r\n\r\n  let balances: { [mint: string]: number } = {};\r\n  for (let account of tokenAccounts || []) {\r\n    if (!account.account) {\r\n      continue;\r\n    }\r\n    let parsedAccount;\r\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\r\n      parsedAccount = {\r\n        mint: WRAPPED_SOL_MINT,\r\n        owner: account.pubkey,\r\n        amount: account.account.lamports,\r\n      };\r\n    } else {\r\n      parsedAccount = parseTokenAccountData(account.account.data);\r\n    }\r\n    if (!(parsedAccount.mint.toBase58() in balances)) {\r\n      balances[parsedAccount.mint.toBase58()] = 0;\r\n    }\r\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\r\n    const additionalAmount = divideBnToNumber(\r\n      new BN(parsedAccount.amount),\r\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\r\n    );\r\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\r\n  }\r\n  return Object.entries(balances).map(([mint, balance]) => {\r\n    return { mint, balance };\r\n  });\r\n}\r\n\r\nexport function useUnmigratedDeprecatedMarkets() {\r\n  const connection = useConnection();\r\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\r\n  const marketsList =\r\n    accounts &&\r\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\r\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\r\n\r\n  const useUnmigratedDeprecatedMarketsInner = async () => {\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    const getMarket = async (address) => {\r\n      const marketInfo = USE_MARKETS.find((market) =>\r\n        market.address.equals(address),\r\n      );\r\n      if (!marketInfo) {\r\n        console.log('Failed loading market');\r\n        notify({\r\n          message: 'Error loading market',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n      try {\r\n        console.log('Loading market', marketInfo.name);\r\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\r\n        return await Market.load(\r\n          connection,\r\n          marketInfo.address,\r\n          {},\r\n          marketInfo.programId,\r\n        );\r\n      } catch (e) {\r\n        console.log('Failed loading market', marketInfo.name, e);\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\r\n  };\r\n  const [markets] = useAsyncData(\r\n    useUnmigratedDeprecatedMarketsInner,\r\n    tuple(\r\n      'useUnmigratedDeprecatedMarketsInner',\r\n      connection,\r\n      deps && deps.toString(),\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n  return markets.map((market) => ({\r\n    market,\r\n    openOrdersList: accounts?.filter(\r\n      (openOrders) => market && openOrders.market.equals(market.address),\r\n    ),\r\n  }));\r\n}\r\n\r\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const { connected, wallet } = useWallet();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  const connection = useConnection();\r\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\r\n  const marketsList =\r\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\r\n\r\n  // This isn't quite right: open order balances could change\r\n  const deps =\r\n    marketsList &&\r\n    marketsList\r\n      .filter((market): market is Market => !!market)\r\n      .map((market) => market.address.toBase58());\r\n\r\n  async function getOpenOrdersForDeprecatedMarkets() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\r\n    const getOrders = async (market: Market | null) => {\r\n      if (!market) {\r\n        return null;\r\n      }\r\n      const { marketName } = getMarketDetails(market, customMarkets);\r\n      try {\r\n        console.log('Fetching open orders for', marketName);\r\n        // Can do better than this, we have the open orders accounts already\r\n        return (\r\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\r\n        ).map((order) => ({ marketName, market, ...order }));\r\n      } catch (e) {\r\n        console.log('Failed loading open orders', market.address.toBase58(), e);\r\n        notify({\r\n          message: `Error loading open orders for deprecated ${marketName}`,\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getOrders)))\r\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\r\n      .flat();\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getOpenOrdersForDeprecatedMarkets',\r\n    connected,\r\n    connection,\r\n    wallet,\r\n    deps && deps.toString(),\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(\r\n    getOpenOrdersForDeprecatedMarkets,\r\n    cacheKey,\r\n    {\r\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n    },\r\n  );\r\n  console.log('openOrders', openOrders);\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalancesForDeprecatedMarkets() {\r\n  const markets = useUnmigratedDeprecatedMarkets();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n\r\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\r\n  markets.forEach(({ market, openOrdersList }) => {\r\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\r\n      market,\r\n      customMarkets,\r\n    );\r\n    if (!baseCurrency || !quoteCurrency || !market) {\r\n      return;\r\n    }\r\n    (openOrdersList || []).forEach((openOrders) => {\r\n      const inOrdersBase =\r\n        openOrders?.baseTokenTotal &&\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n        );\r\n      const inOrdersQuote =\r\n        openOrders?.quoteTokenTotal &&\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n        );\r\n      const unsettledBase =\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\r\n      const unsettledQuote =\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\r\n\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: baseCurrency,\r\n        key: `${marketName}${baseCurrency}`,\r\n        orders: inOrdersBase,\r\n        unsettled: unsettledBase,\r\n        openOrders,\r\n      });\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: quoteCurrency,\r\n        key: `${marketName}${quoteCurrency}`,\r\n        orders: inOrdersQuote,\r\n        unsettled: unsettledQuote,\r\n        openOrders,\r\n      });\r\n    });\r\n  });\r\n  return openOrderAccountBalances;\r\n}\r\n\r\nexport function getMarketInfos(\r\n  customMarkets: CustomMarketInfo[],\r\n): MarketInfo[] {\r\n  const customMarketsInfo = customMarkets.map((m) => ({\r\n    ...m,\r\n    address: new PublicKey(m.address),\r\n    programId: new PublicKey(m.programId),\r\n    deprecated: false,\r\n  }));\r\n\r\n  return [...customMarketsInfo, ...USE_MARKETS];\r\n}\r\n\r\nexport function useMarketInfos() {\r\n  const { customMarkets } = useMarket();\r\n  return getMarketInfos(customMarkets);\r\n}\r\n\r\n/**\r\n * If selling, choose min tick size. If buying choose a price\r\n * s.t. given the state of the orderbook, the order will spend\r\n * `cost` cost currency.\r\n *\r\n * @param orderbook serum Orderbook object\r\n * @param cost quantity to spend. Base currency if selling,\r\n *  quote currency if buying.\r\n * @param tickSizeDecimals size of price increment of the market\r\n */\r\nexport function getMarketOrderPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  if (orderbook.isBids) {\r\n    return orderbook.market.tickSize;\r\n  }\r\n  let spentCost = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  const asks = orderbook.getL2(1000);\r\n  for ([price, sizeAtLevel] of asks) {\r\n    costAtLevel = price * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      break;\r\n    }\r\n    spentCost += costAtLevel;\r\n  }\r\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = sendPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function getExpectedFillPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  let spentCost = 0.;\r\n  let avgPrice = 0.;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\r\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      avgPrice += (cost - spentCost) * price;\r\n      spentCost = cost;\r\n      break;\r\n    }\r\n    avgPrice += costAtLevel * price;\r\n    spentCost += costAtLevel;\r\n  }\r\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = totalAvgPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml,body{\r\n  background: #11161D;\r\n}\r\ninput[type=number]::-webkit-inner-spin-button {\r\n  opacity: 0;\r\n}\r\ninput[type=number]:hover::-webkit-inner-spin-button,\r\ninput[type=number]:focus::-webkit-inner-spin-button {\r\n  opacity: 0.25;\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 15px;\r\n}\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #2d313c;\r\n}\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #5b5f67;\r\n}\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #5b5f67;\r\n}\r\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-track,\r\n.ant-slider ant-slider-track:hover {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-dot-active,\r\n.ant-slider-handle,\r\n.ant-slider-handle-click-focused,\r\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\r\n  border: 2px solid #2abdd2; \r\n}\r\n.ant-table-tbody > tr.ant-table-row:hover > td {\r\n  background: #273043;\r\n}\r\n.ant-table-tbody > tr > td {\r\n  border-bottom: 8px solid #1A2029;\r\n}\r\n.ant-table-container table > thead > tr:first-child th {\r\n  border-bottom: none;\r\n}\r\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\r\n  border-top: 1px solid #434a59 !important;\r\n}\r\n.ant-layout {\r\n    background: #11161D\r\n  }\r\n  .ant-table {\r\n    background: #212734;\r\n  }\r\n  .ant-table-thead > tr > th {\r\n    background: #1A2029;\r\n  }\r\n.ant-select-item-option-content {\r\n  img {\r\n    margin-right: 4px;\r\n  }\r\n}\r\n.ant-modal-content {\r\n  background-color: #212734;\r\n}\r\n\r\n@-webkit-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-moz-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n.flash {\r\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\r\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\r\n  animation: highlight 0.5s ease 0s 1 alternate;\r\n}`;\r\n","import React, { Component } from 'react';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <Title level={2}>Something went wrong.</Title>\r\n            <Title level={4}>Please try again later.</Title>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef<() => void>();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current && savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 5px;\r\n  padding: 20px;\r\n  background-color: #1a2029;\r\n`;\r\n\r\nexport default function FloatingElement({ style, children }) {\r\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\r\nimport { isEqual, getDecimalCount } from '../utils/utils';\r\nimport { useInterval } from '../utils/useInterval';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport usePrevious from '../utils/usePrevious';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nconst MarkPriceTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  text-align: right;\r\n  float: right;\r\n  height: 100%;\r\n  ${(props) =>\r\n    props['data-width'] &&\r\n    css`\r\n      width: ${props['data-width']};\r\n    `}\r\n  ${(props) =>\r\n    props['data-bgcolor'] &&\r\n    css`\r\n      background-color: ${props['data-bgcolor']};\r\n    `}\r\n`;\r\n\r\nconst Price = styled.div`\r\n  position: absolute;\r\n  right: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\r\n  const markPrice = useMarkPrice();\r\n  const [orderbook] = useOrderbook();\r\n  const { baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const currentOrderbookData = useRef(null);\r\n  const lastOrderbookData = useRef(null);\r\n\r\n  const [orderbookData, setOrderbookData] = useState(null);\r\n\r\n  useInterval(() => {\r\n    if (\r\n      !currentOrderbookData.current ||\r\n      JSON.stringify(currentOrderbookData.current) !==\r\n        JSON.stringify(lastOrderbookData.current)\r\n    ) {\r\n      let bids = orderbook?.bids || [];\r\n      let asks = orderbook?.asks || [];\r\n\r\n      let sum = (total, [, size], index) =>\r\n        index < depth ? total + size : total;\r\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\r\n\r\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\r\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\r\n\r\n      currentOrderbookData.current = {\r\n        bids: orderbook?.bids,\r\n        asks: orderbook?.asks,\r\n      };\r\n\r\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\r\n    }\r\n  }, 250);\r\n\r\n  useEffect(() => {\r\n    lastOrderbookData.current = {\r\n      bids: orderbook?.bids,\r\n      asks: orderbook?.asks,\r\n    };\r\n  }, [orderbook]);\r\n\r\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\r\n    let cumulative = orders\r\n      .slice(0, depth)\r\n      .reduce((cumulative, [price, size], i) => {\r\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\r\n        cumulative.push({\r\n          price,\r\n          size,\r\n          cumulativeSize,\r\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\r\n        });\r\n        return cumulative;\r\n      }, []);\r\n    if (backwards) {\r\n      cumulative = cumulative.reverse();\r\n    }\r\n    return cumulative;\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\r\n      }\r\n    >\r\n      <Title>Orderbook</Title>\r\n      <SizeTitle>\r\n        <Col span={12} style={{ textAlign: 'left' }}>\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'sell'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n      <MarkPriceComponent markPrice={markPrice} />\r\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'buy'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OrderbookRow = React.memo(\r\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\r\n    const element = useRef();\r\n\r\n    const { market } = useMarket();\r\n\r\n    useEffect(() => {\r\n      // eslint-disable-next-line\r\n      !element.current?.classList.contains('flash') &&\r\n        element.current?.classList.add('flash');\r\n      const id = setTimeout(\r\n        () =>\r\n          element.current?.classList.contains('flash') &&\r\n          element.current?.classList.remove('flash'),\r\n        250,\r\n      );\r\n      return () => clearTimeout(id);\r\n    }, [price, size]);\r\n\r\n    let formattedSize =\r\n      market?.minOrderSize && !isNaN(size)\r\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\r\n        : size;\r\n\r\n    let formattedPrice =\r\n      market?.tickSize && !isNaN(price)\r\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\r\n        : price;\r\n\r\n    return (\r\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\r\n        <Col span={12} style={{ textAlign: 'left' }}>\r\n          {formattedSize}\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          <Line\r\n            data-width={sizePercent + '%'}\r\n            data-bgcolor={\r\n              side === 'buy'\r\n                ? 'rgba(65, 199, 122, 0.6)'\r\n                : 'rgba(242, 60, 105, 0.6)'\r\n            }\r\n          />\r\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  },\r\n  (prevProps, nextProps) =>\r\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\r\n);\r\n\r\nconst MarkPriceComponent = React.memo(\r\n  ({ markPrice }) => {\r\n    const { market } = useMarket();\r\n    const previousMarkPrice = usePrevious(markPrice);\r\n\r\n    let markPriceColor =\r\n      markPrice > previousMarkPrice\r\n        ? '#41C77A'\r\n        : markPrice < previousMarkPrice\r\n        ? '#F23B69'\r\n        : 'white';\r\n\r\n    let formattedMarkPrice =\r\n      markPrice &&\r\n      market?.tickSize &&\r\n      markPrice.toFixed(getDecimalCount(market.tickSize));\r\n\r\n    return (\r\n      <MarkPriceTitle justify=\"center\">\r\n        <Col style={{ color: markPriceColor }}>\r\n          {markPrice > previousMarkPrice && (\r\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {markPrice < previousMarkPrice && (\r\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {formattedMarkPrice || '----'}\r\n        </Col>\r\n      </MarkPriceTitle>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\r\n);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import React from 'react';\r\nimport { ConfigProvider, Table } from 'antd';\r\n\r\nexport default function DataTable({\r\n  dataSource,\r\n  columns,\r\n  emptyLabel = 'No data',\r\n  pagination = false,\r\n  loading = false,\r\n  pageSize = 10,\r\n}) {\r\n  const customizeRenderEmpty = () => (\r\n    <div\r\n      style={{\r\n        padding: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {emptyLabel}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={pagination ? { pagination: true, pageSize } : false}\r\n        loading={loading}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useTokenAccounts,\r\n  getSelectedTokenAccountForMint,\r\n} from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { settleFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport default function BalancesTable({\r\n  balances,\r\n  showMarket,\r\n  hideWalletBalance,\r\n  onSettleSuccess,\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const connection = useSendConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function onSettleFunds(market, openOrders) {\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.baseMintAddress,\r\n        ),\r\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.quoteMintAddress,\r\n        ),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    onSettleSuccess && onSettleSuccess();\r\n  }\r\n\r\n  const columns = [\r\n    showMarket\r\n      ? {\r\n          title: 'Market',\r\n          dataIndex: 'marketName',\r\n          key: 'marketName',\r\n        }\r\n      : null,\r\n    {\r\n      title: 'Coin',\r\n      dataIndex: 'coin',\r\n      key: 'coin',\r\n    },\r\n    hideWalletBalance\r\n      ? null\r\n      : {\r\n          title: 'Wallet Balance',\r\n          dataIndex: 'wallet',\r\n          key: 'wallet',\r\n        },\r\n    {\r\n      title: 'Orders',\r\n      dataIndex: 'orders',\r\n      key: 'orders',\r\n    },\r\n    {\r\n      title: 'Unsettled',\r\n      dataIndex: 'unsettled',\r\n      key: 'unsettled',\r\n    },\r\n    {\r\n      key: 'action',\r\n      render: ({ market, openOrders, marketName }) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Button\r\n            ghost\r\n            style={{ marginRight: 12 }}\r\n            onClick={() => onSettleFunds(market, openOrders)}\r\n          >\r\n            Settle {marketName}\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ].filter((x) => x);\r\n  return (\r\n    <DataTable\r\n      emptyLabel=\"No balances\"\r\n      dataSource={balances}\r\n      columns={columns}\r\n      pagination={false}\r\n    />\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nimport styled from 'styled-components';\r\nimport {Button, Col, Row, Tag} from 'antd';\r\nimport {cancelOrder} from '../../utils/send';\r\nimport {useWallet} from '../../utils/wallet';\r\nimport {useSendConnection} from '../../utils/connection';\r\nimport {notify} from '../../utils/notifications';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\nimport {OrderWithMarketAndMarketName} from \"../../utils/types\";\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: #f23b69;\r\n  border: 1px solid #f23b69;\r\n`;\r\n\r\nexport default function OpenOrderTable({ openOrders, onCancelSuccess, pageSize, loading, marketFilter } : {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  onCancelSuccess?: () => void;\r\n  pageSize?: number;\r\n  loading?: boolean;\r\n  marketFilter?: boolean;\r\n}) {\r\n  let { wallet } = useWallet();\r\n  let connection = useSendConnection();\r\n\r\n  const [cancelId, setCancelId] = useState(null);\r\n\r\n  async function cancel(order) {\r\n    setCancelId(order?.orderId);\r\n    try {\r\n      await cancelOrder({\r\n        order,\r\n        market: order.market,\r\n        connection,\r\n        wallet,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error cancelling order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } finally {\r\n      setCancelId(null);\r\n    }\r\n    onCancelSuccess && onCancelSuccess();\r\n  }\r\n\r\n  const marketFilters = [\r\n    ...new Set((openOrders || []).map(orderInfos => orderInfos.marketName))\r\n  ].map(marketName => {return {text: marketName, value: marketName}});\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n      filters: (marketFilter ? marketFilters : undefined),\r\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n      sorter: (a, b) => {\r\n        if (a.side === b.side) {\r\n          return 0.\r\n        } else if (a.side === 'buy') {\r\n          return 1.\r\n        } else {\r\n          return -1.\r\n        }\r\n      },\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Size',\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n      sorter: (a, b) => b.size - a.size,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      sorter: (a, b) => b.price - a.price,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      key: 'orderId',\r\n      render: (order) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <CancelButton\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => cancel(order)}\r\n            loading={cancelId + '' === order?.orderId + ''}\r\n          >\r\n            Cancel\r\n          </CancelButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const dataSource = (openOrders || []).map((order) =>\r\n    Object.assign(order, { key: order.orderId }),\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <DataTable\r\n          emptyLabel=\"No open orders\"\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={true}\r\n          pageSize={pageSize ? pageSize : 5}\r\n          loading={loading !== undefined && loading}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Tag } from 'antd';\r\nimport { useFills, useMarket } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nexport default function FillsTable() {\r\n  const fills = useFills();\r\n\r\n  const { quoteCurrency } = useMarket();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: `Size`,\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n    },\r\n    {\r\n      title: `Price`,\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: `Liquidity`,\r\n      dataIndex: 'liquidity',\r\n      key: 'liquidity',\r\n    },\r\n    {\r\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\r\n      dataIndex: 'feeCost',\r\n      key: 'feeCost',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (fills || []).map((fill) => ({\r\n    ...fill,\r\n    key: `${fill.orderId}${fill.side}`,\r\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <DataTable\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={true}\r\n            pageSize={5}\r\n            emptyLabel=\"No fills\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Typography, Tag } from 'antd';\r\nimport { useFeeDiscountKeys } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\r\nimport { percentFormat } from '../../utils/utils';\r\n\r\nexport default function FeesTable() {\r\n  const [feeAccounts] = useFeeDiscountKeys();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n      render: (feeTier, row) => (\r\n        <div style={{ display: 'flex' }}>\r\n          <Typography>{feeTier}</Typography>\r\n          {row.index === 0 ? (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                Selected\r\n              </Tag>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: `Public Key`,\r\n      dataIndex: 'pubkey',\r\n      key: 'pubkey',\r\n      render: (pubkey) => pubkey.toBase58(),\r\n    },\r\n    {\r\n      title: `Balance`,\r\n      dataIndex: 'balance',\r\n      key: 'balance',\r\n    },\r\n    {\r\n      title: `Mint`,\r\n      dataIndex: 'mint',\r\n      key: 'mint',\r\n      render: (_, row) =>\r\n        row.mint.equals(TokenInstructions.SRM_MINT)\r\n          ? 'SRM'\r\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\r\n          ? 'MSRM'\r\n          : 'UNKNOWN',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (feeAccounts || []).map((account, index) => ({\r\n    ...account,\r\n    index,\r\n    key: account.pubkey.toBase58(),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <DataTable\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={true}\r\n            pageSize={5}\r\n            emptyLabel=\"No (M)SRM accounts\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: 8 }}>\r\n        <Col>\r\n          <Typography>\r\n            Holding SRM or MSRM makes you eligible for fee discounts:\r\n          </Typography>\r\n          <FeeScheduleTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FeeScheduleTable() {\r\n  // Representation of serum-js/src/fees.ts\r\n  const dataSource = [\r\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\r\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\r\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\r\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\r\n    {\r\n      feeTier: 4,\r\n      taker: 0.0014,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 100000,\r\n    },\r\n    {\r\n      feeTier: 5,\r\n      taker: 0.0012,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 1000000,\r\n    },\r\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\r\n  ];\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: 'Requirements',\r\n      dataIndex: 'requirements',\r\n      key: 'requirements',\r\n      render: (_, row) => (\r\n        <Typography>\r\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <DataTable\r\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\r\n      columns={columns}\r\n    />\r\n  );\r\n}\r\n","import BalancesTable from './BalancesTable';\r\nimport OpenOrderTable from './OpenOrderTable';\r\nimport React from 'react';\r\nimport { Tabs, Typography } from 'antd';\r\nimport FillsTable from './FillsTable';\r\nimport FloatingElement from '../layout/FloatingElement';\r\nimport FeesTable from './FeesTable';\r\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\r\n\r\nconst { Paragraph } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function Index() {\r\n  const { market } = useMarket();\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\r\n      <Typography>\r\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n          Make sure to go to Balances and click Settle to send out your funds.\r\n        </Paragraph>\r\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\r\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\r\n          other tokens from FTX.{' '}\r\n        </Paragraph>\r\n      </Typography>\r\n      <Tabs defaultActiveKey=\"orders\">\r\n        <TabPane tab=\"Open Orders\" key=\"orders\">\r\n          <OpenOrdersTab />\r\n        </TabPane>\r\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\r\n          <FillsTable />\r\n        </TabPane>\r\n        <TabPane tab=\"Balances\" key=\"balances\">\r\n          <BalancesTab />\r\n        </TabPane>\r\n        {market && market.supportsSrmFeeDiscounts ? (\r\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\r\n            <FeesTable />\r\n          </TabPane>\r\n        ) : null}\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OpenOrdersTab = () => {\r\n  const openOrders = useOpenOrders();\r\n\r\n  return <OpenOrderTable openOrders={openOrders} />;\r\n};\r\n\r\nconst BalancesTab = () => {\r\n  const balances = useBalances();\r\n\r\n  return <BalancesTable balances={balances} />;\r\n};\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  useSelectedBaseCurrencyAccount,\r\n  useMarket,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\n\r\nexport default function DepositDialog({ onClose, baseOrQuote }) {\r\n  const { market, baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const { providerName, providerUrl } = useWallet();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  let coinMint;\r\n  let account;\r\n  let depositCoin;\r\n  if (baseOrQuote === 'base') {\r\n    coinMint = market?.baseMintAddress;\r\n    account = baseCurrencyAccount;\r\n    depositCoin = baseCurrency;\r\n  } else if (baseOrQuote === 'quote') {\r\n    coinMint = market?.quoteMintAddress;\r\n    account = quoteCurrencyAccount;\r\n    depositCoin = quoteCurrency;\r\n  } else {\r\n    account = null;\r\n  }\r\n  if (!coinMint) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Modal\r\n      title={depositCoin}\r\n      visible={!!coinMint}\r\n      onOk={onClose}\r\n      onCancel={onClose}\r\n    >\r\n      <div style={{ paddingTop: '20px' }}>\r\n        <p style={{ color: 'white' }}>Mint address:</p>\r\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\r\n        <div>\r\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\r\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n            {account ? (\r\n              account.pubkey.toBase58()\r\n            ) : (\r\n              <>\r\n                Visit{' '}\r\n                <Link external to={providerUrl}>\r\n                  {providerName}\r\n                </Link>{' '}\r\n                to create an account for this mint\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {TokenAccount} from \"../utils/types\";\r\nimport {useSelectedTokenAccounts} from \"../utils/markets\";\r\nimport {Button, Col, Select, Typography} from \"antd\";\r\nimport {CopyOutlined} from '@ant-design/icons';\r\nimport {abbreviateAddress} from \"../utils/utils\";\r\nimport {notify} from \"../utils/notifications\";\r\n\r\nexport default function StandaloneTokenAccountsSelect({\r\n  accounts,\r\n  mint,\r\n  label,\r\n}: {\r\n  accounts: TokenAccount[] | null | undefined,\r\n  mint: string | undefined,\r\n  label?: boolean\r\n}) {\r\n  const [selectedTokenAccounts, setSelectedTokenAccounts] = useSelectedTokenAccounts();\r\n\r\n  let selectedValue: string | undefined;\r\n  if (mint && mint in selectedTokenAccounts) {\r\n    selectedValue = selectedTokenAccounts[mint];\r\n  } else if (accounts && accounts?.length > 0) {\r\n    selectedValue = accounts[0].pubkey.toBase58();\r\n  } else {\r\n    selectedValue = undefined;\r\n  }\r\n\r\n  const setTokenAccountForCoin = (value) => {\r\n    if (!mint) {\r\n      notify({\r\n        message: 'Error selecting token account',\r\n        description: 'Mint is undefined',\r\n        type: 'error',\r\n      })\r\n      return;\r\n    }\r\n    const newSelectedTokenAccounts = {...selectedTokenAccounts};\r\n    newSelectedTokenAccounts[mint] = value;\r\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {label &&\r\n        <Col span={8}>\r\n          Token account:\r\n        </Col>\r\n      }\r\n      <Col span={label ? 13 : 21}>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          value={selectedValue}\r\n          onSelect={setTokenAccountForCoin}\r\n        >\r\n          {accounts?.map(account => (\r\n            <Select.Option key={account.pubkey.toBase58()} value={account.pubkey.toBase58()}>\r\n              <Typography.Text code>{label ? abbreviateAddress(account.pubkey, 8) : account.pubkey.toBase58()}</Typography.Text>\r\n            </Select.Option>)\r\n          )}\r\n        </Select>\r\n      </Col>\r\n      <Col span={2} offset={1}>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<CopyOutlined />}\r\n          size={'small'}\r\n          onClick={() => selectedValue && navigator.clipboard.writeText(selectedValue)}\r\n        />\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {Button, Col, Divider, Row} from 'antd';\r\nimport React, {useState} from 'react';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useBalances,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport DepositDialog from './DepositDialog';\r\nimport {useWallet} from '../utils/wallet';\r\nimport Link from './Link';\r\nimport {settleFunds} from '../utils/send';\r\nimport {useSendConnection} from '../utils/connection';\r\nimport {notify} from '../utils/notifications';\r\nimport {Balances} from \"../utils/types\";\r\nimport StandaloneTokenAccountsSelect from \"./StandaloneTokenAccountSelect\";\r\n\r\nconst RowBox = styled(Row)`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst Tip = styled.p`\r\n  font-size: 12px;\r\n  padding-top: 6px;\r\n`;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: #2abdd2;\r\n  background-color: #212734;\r\n  border-width: 0px;\r\n`;\r\n\r\nexport default function StandaloneBalancesDisplay() {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const balances = useBalances();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const connection = useSendConnection();\r\n  const { providerUrl, providerName, wallet, connected } = useWallet();\r\n  const [baseOrQuote, setBaseOrQuote] = useState('');\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const baseCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === baseCurrency);\r\n  const quoteCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === quoteCurrency);\r\n\r\n  async function onSettleFunds() {\r\n    if (!market) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'market is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!openOrdersAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!baseCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!quoteCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders: openOrdersAccount,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount,\r\n        quoteCurrencyAccount,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n\r\n  const formattedBalances: [string | undefined, Balances | undefined, string, string | undefined][] = [\r\n    [baseCurrency, baseCurrencyBalances, 'base', market?.baseMintAddress.toBase58()],\r\n    [quoteCurrency, quoteCurrencyBalances, 'quote', market?.quoteMintAddress.toBase58()],\r\n  ]\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      {formattedBalances.map(([currency, balances, baseOrQuote, mint], index) => (\r\n        <React.Fragment key={index}>\r\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\r\n          {connected && (\r\n            <RowBox\r\n              align=\"middle\"\r\n              style={{ paddingBottom: 10 }}\r\n            >\r\n              <StandaloneTokenAccountsSelect\r\n                accounts={tokenAccounts?.filter(account => account.effectiveMint.toBase58() === mint)}\r\n                mint={mint}\r\n                label\r\n              />\r\n            </RowBox>\r\n          )}\r\n          <RowBox\r\n            align=\"middle\"\r\n            justify=\"space-between\"\r\n            style={{ paddingBottom: 12 }}\r\n          >\r\n            <Col>Wallet balance:</Col>\r\n            <Col>{balances && balances.wallet}</Col>\r\n          </RowBox>\r\n          <RowBox\r\n            align=\"middle\"\r\n            justify=\"space-between\"\r\n            style={{ paddingBottom: 12 }}\r\n          >\r\n            <Col>Unsettled balance:</Col>\r\n            <Col>{balances && balances.unsettled}</Col>\r\n          </RowBox>\r\n          <RowBox align=\"middle\" justify=\"space-around\">\r\n            <Col style={{ width: 150 }}>\r\n              <ActionButton\r\n                block\r\n                size=\"large\"\r\n                onClick={() => setBaseOrQuote(baseOrQuote)}\r\n              >\r\n                Deposit\r\n              </ActionButton>\r\n            </Col>\r\n            <Col style={{ width: 150 }}>\r\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\r\n                Settle\r\n              </ActionButton>\r\n            </Col>\r\n          </RowBox>\r\n          <Tip>\r\n            All deposits go to your{' '}\r\n            <Link external to={providerUrl}>\r\n              {providerName}\r\n            </Link>{' '}\r\n            wallet\r\n          </Tip>\r\n        </React.Fragment>\r\n      ))}\r\n      <DepositDialog\r\n        baseOrQuote={baseOrQuote}\r\n        onClose={() => setBaseOrQuote('')}\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useSelectedBaseCurrencyBalances,\r\n  useSelectedQuoteCurrencyBalances,\r\n  useMarket,\r\n  useMarkPrice,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { notify } from '../utils/notifications';\r\nimport {\r\n  getDecimalCount,\r\n  roundToDecimal,\r\n  floorToDecimal,\r\n} from '../utils/utils';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { placeOrder } from '../utils/send';\r\nimport {SwitchChangeEventHandler} from \"antd/es/switch\";\r\n\r\nconst SellButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #f23b69;\r\n  border-color: #f23b69;\r\n`;\r\n\r\nconst BuyButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nconst sliderMarks = {\r\n  0: '0%',\r\n  25: '25%',\r\n  50: '50%',\r\n  75: '75%',\r\n  100: '100%',\r\n};\r\n\r\nexport default function TradeForm({ style, setChangeOrderRef }: {\r\n  style?: any;\r\n  setChangeOrderRef?: (ref: ({ size, price }: {size?: number; price?: number;}) => void) => void;\r\n}) {\r\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const { wallet } = useWallet();\r\n  const sendConnection = useSendConnection();\r\n  const markPrice = useMarkPrice();\r\n\r\n  const [postOnly, setPostOnly] = useState(false);\r\n  const [ioc, setIoc] = useState(false);\r\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\r\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\r\n  const [price, setPrice] = useState<number | undefined>(undefined);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sizeFraction, setSizeFraction] = useState(0);\r\n\r\n  const availableQuote = openOrdersAccount && market\r\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\r\n    : 0;\r\n\r\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\r\n  let baseBalance = baseCurrencyBalances || 0;\r\n  let sizeDecimalCount =\r\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\r\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\r\n\r\n  useEffect(() => {\r\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setChangeOrderRef]);\r\n\r\n  useEffect(() => {\r\n    baseSize && price && onSliderChange(sizeFraction);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [side]);\r\n\r\n  useEffect(() => {\r\n    updateSizeFraction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [price, baseSize]);\r\n\r\n  const onSetBaseSize = (baseSize: number | undefined) => {\r\n    setBaseSize(baseSize);\r\n    if (!baseSize) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    const rawQuoteSize = baseSize * usePrice;\r\n    const quoteSize =\r\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\r\n    setQuoteSize(quoteSize);\r\n  };\r\n\r\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\r\n    setQuoteSize(quoteSize);\r\n    if (!quoteSize) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    const rawBaseSize = quoteSize / usePrice;\r\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\r\n    setBaseSize(baseSize);\r\n  };\r\n\r\n  const doChangeOrder = ({ size, price }: {size?: number; price?: number;}) => {\r\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\r\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\r\n    formattedSize && onSetBaseSize(formattedSize);\r\n    formattedPrice && setPrice(formattedPrice);\r\n  };\r\n\r\n  const updateSizeFraction = () => {\r\n    const rawMaxSize = side === 'buy' ? quoteBalance / (price || markPrice || 1.) : baseBalance;\r\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\r\n    const sizeFraction = Math.min(((baseSize || 0.) / maxSize) * 100, 100);\r\n    setSizeFraction(sizeFraction);\r\n  };\r\n\r\n  const onSliderChange = (value) => {\r\n    if (!price && markPrice) {\r\n      let formattedMarkPrice: number | string = priceDecimalCount\r\n        ? markPrice.toFixed(priceDecimalCount)\r\n        : markPrice;\r\n      setPrice(typeof formattedMarkPrice === 'number' ? formattedMarkPrice : parseFloat(formattedMarkPrice));\r\n    }\r\n\r\n    let newSize;\r\n    if (side === 'buy') {\r\n      if (price || markPrice) {\r\n        newSize = ((quoteBalance / (price || markPrice || 1.)) * value) / 100;\r\n      }\r\n    } else {\r\n      newSize = (baseBalance * value) / 100;\r\n    }\r\n\r\n    // round down to minOrderSize increment\r\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\r\n\r\n    onSetBaseSize(formatted);\r\n  };\r\n\r\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setIoc(false);\r\n    }\r\n    setPostOnly(checked);\r\n  };\r\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setPostOnly(false);\r\n    }\r\n    setIoc(checked);\r\n  };\r\n\r\n  async function onSubmit() {\r\n    if (!price) {\r\n      console.warn('Missing price');\r\n      notify({\r\n        message: 'Missing price',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else if (!baseSize) {\r\n      console.warn('Missing size');\r\n      notify({\r\n        message: 'Missing size',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      await placeOrder({\r\n        side,\r\n        price,\r\n        size: baseSize,\r\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n      });\r\n      setPrice(undefined);\r\n      onSetBaseSize(undefined);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        <Radio.Group\r\n          onChange={(e) => setSide(e.target.value)}\r\n          value={side}\r\n          buttonStyle=\"solid\"\r\n          style={{\r\n            marginBottom: 8,\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Radio.Button\r\n            value=\"buy\"\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              background: side === 'buy' ? '#02bf76' : '',\r\n              borderColor: side === 'buy' ? '#02bf76' : '',\r\n            }}\r\n          >\r\n            BUY\r\n          </Radio.Button>\r\n          <Radio.Button\r\n            value=\"sell\"\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              background: side === 'sell' ? '#F23B69' : '',\r\n              borderColor: side === 'sell' ? '#F23B69' : '',\r\n            }}\r\n          >\r\n            SELL\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n        <Input\r\n          style={{ textAlign: 'right', paddingBottom: 8 }}\r\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\r\n          suffix={\r\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n          }\r\n          value={price}\r\n          type=\"number\"\r\n          step={market?.tickSize || 1}\r\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\r\n        />\r\n        <Input.Group compact style={{ paddingBottom: 8 }}>\r\n          <Input\r\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\r\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\r\n            suffix={\r\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\r\n            }\r\n            value={baseSize}\r\n            type=\"number\"\r\n            step={market?.minOrderSize || 1}\r\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\r\n          />\r\n          <Input\r\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\r\n            suffix={\r\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\r\n                {quoteCurrency}\r\n              </span>\r\n            }\r\n            value={quoteSize}\r\n            type=\"number\"\r\n            step={market?.minOrderSize || 1}\r\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\r\n          />\r\n        </Input.Group>\r\n        <Slider\r\n          value={sizeFraction}\r\n          tipFormatter={(value) => `${value}%`}\r\n          marks={sliderMarks}\r\n          onChange={onSliderChange}\r\n        />\r\n        <div style={{ paddingTop: 18 }}>\r\n          {'POST '}\r\n          <Switch\r\n            checked={postOnly}\r\n            onChange={postOnChange}\r\n            style={{ marginRight: 40 }}\r\n          />\r\n          {'IOC '}\r\n          <Switch checked={ioc} onChange={iocOnChange} />\r\n        </div>\r\n      </div>\r\n      {side === 'buy' ? (\r\n        <BuyButton\r\n          disabled={!price || !baseSize}\r\n          onClick={onSubmit}\r\n          block\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={submitting}\r\n        >\r\n          Buy {baseCurrency}\r\n        </BuyButton>\r\n      ) : (\r\n        <SellButton\r\n          disabled={!price || !baseSize}\r\n          onClick={onSubmit}\r\n          block\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={submitting}\r\n        >\r\n          Sell {baseCurrency}\r\n        </SellButton>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\r\nimport { getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { BonfidaTrade } from '../utils/types';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nexport default function PublicTrades({ smallScreen }) {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const [trades, loaded] = useBonfidaTrades();\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        smallScreen\r\n          ? { flex: 1 }\r\n          : {\r\n              marginTop: '10px',\r\n              minHeight: '270px',\r\n              maxHeight: 'calc(100vh - 700px)',\r\n            }\r\n      }\r\n    >\r\n      <Title>Recent Market trades</Title>\r\n      <SizeTitle>\r\n        <Col span={8}>\r\n          Price ({quoteCurrency}){' '}\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'right' }}>Size ({baseCurrency})</Col>\r\n        <Col span={8} style={{ textAlign: 'right' }}>\r\n          Time\r\n        </Col>\r\n      </SizeTitle>\r\n      {!!trades && loaded && (\r\n        <div\r\n          style={{\r\n            marginRight: '-20px',\r\n            paddingRight: '5px',\r\n            overflowY: 'scroll',\r\n            maxHeight: smallScreen\r\n              ? 'calc(100% - 75px)'\r\n              : 'calc(100vh - 800px)',\r\n          }}\r\n        >\r\n          {trades.map((trade: BonfidaTrade, i: number) => (\r\n            <Row key={i} style={{ marginBottom: 4 }}>\r\n              <Col\r\n                span={8}\r\n                style={{\r\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\r\n                }}\r\n              >\r\n                {market?.tickSize && !isNaN(trade.price)\r\n                  ? Number(trade.price).toFixed(\r\n                      getDecimalCount(market.tickSize),\r\n                    )\r\n                  : trade.price}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right' }}>\r\n                {market?.minOrderSize && !isNaN(trade.size)\r\n                  ? Number(trade.size).toFixed(\r\n                      getDecimalCount(market.minOrderSize),\r\n                    )\r\n                  : trade.size}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\r\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\n\r\nexport default function LinkAddress({ title, address }: {title?: undefined | any; address: string;}) {\r\n  return (\r\n    <div>\r\n      {title && <p style={{ color: 'white' }}>{title}</p>}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://explorer.solana.com/address/' + address}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {address}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Divider, Spin, Typography } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useGetOpenOrdersForDeprecatedMarkets,\r\n  useBalancesForDeprecatedMarkets,\r\n  useUnmigratedOpenOrdersAccounts,\r\n} from '../utils/markets';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\r\nimport BalancesTable from './UserInfoTable/BalancesTable';\r\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\r\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\r\n  const balances = useBalancesForDeprecatedMarkets();\r\n  const {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders,\r\n  } = useGetOpenOrdersForDeprecatedMarkets();\r\n\r\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\r\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\r\n  const filteredBalances =\r\n    balances &&\r\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\r\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\r\n  return (\r\n    <FloatingElement>\r\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\r\n        Migrate to new markets\r\n      </Title>\r\n      <Typography>\r\n        Serum has rolled out upgraded markets! They're faster and support fee\r\n        discounts based on SRM holdings.\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        To migrate over to the new markets, please cancel your orders and settle\r\n        your funds on old markets.\r\n      </Typography>\r\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\r\n        <Button onClick={() => refresh(true)}>\r\n          <SyncOutlined /> Refresh data\r\n        </Button>\r\n      </div>\r\n      {!balances ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <>\r\n          <Divider>\r\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\r\n          </Divider>\r\n          {needToCancelOrders ? (\r\n            loaded ? (\r\n              <OpenOrderTable\r\n                openOrders={openOrders}\r\n                onCancelSuccess={() => {\r\n                  setTimeout(() => {\r\n                    refresh();\r\n                    refreshOpenOrders();\r\n                  }, 1000); // Wait so that on-chain account state reflects the update\r\n                }}\r\n              />\r\n            ) : (\r\n              <Spin size=\"large\" />\r\n            )\r\n          ) : null}\r\n          <Divider>\r\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\r\n          </Divider>\r\n          {needToSettleFunds && (\r\n            <BalancesTable\r\n              balances={filteredBalances}\r\n              hideWalletBalance\r\n              showMarket\r\n              onSettleSuccess={() => {\r\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\r\n              }}\r\n            />\r\n          )}\r\n          <Divider>Switch to upgraded markets</Divider>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              onClick={switchToLiveMarkets}\r\n              disabled={needToSettleFunds || needToCancelOrders}\r\n            >\r\n              Switch to new markets\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Input, Modal, Row, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\r\nimport { useAccountInfo, useConnection } from '../utils/connection';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function CustomMarketDialog({\r\n  visible,\r\n  onAddCustomMarket,\r\n  onClose,\r\n}) {\r\n  const connection = useConnection();\r\n\r\n  const [marketId, setMarketId] = useState('');\r\n\r\n  const [marketLabel, setMarketLabel] = useState('');\r\n  const [baseLabel, setBaseLabel] = useState('');\r\n  const [quoteLabel, setQuoteLabel] = useState('');\r\n\r\n  const [market, setMarket] = useState(null);\r\n  const [loadingMarket, setLoadingMarket] = useState(false);\r\n\r\n  const wellFormedMarketId = isValidPublicKey(marketId);\r\n\r\n  const [marketAccountInfo] = useAccountInfo(\r\n    wellFormedMarketId ? new PublicKey(marketId) : null,\r\n  );\r\n  const programId = marketAccountInfo\r\n    ? marketAccountInfo.owner.toBase58()\r\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\r\n\r\n  useEffect(() => {\r\n    if (!wellFormedMarketId || !programId) {\r\n      resetLabels();\r\n      return;\r\n    }\r\n    setLoadingMarket(true);\r\n    Market.load(\r\n      connection,\r\n      new PublicKey(marketId),\r\n      {},\r\n      new PublicKey(programId),\r\n    )\r\n      .then((market) => {\r\n        setMarket(market);\r\n      })\r\n      .catch(() => {\r\n        resetLabels();\r\n        setMarket(null);\r\n      })\r\n      .finally(() => setLoadingMarket(false));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [connection, marketId, programId]);\r\n\r\n  const resetLabels = () => {\r\n    setMarketLabel(null);\r\n    setBaseLabel(null);\r\n    setQuoteLabel(null);\r\n  };\r\n\r\n  const knownMarket = MARKETS.find(\r\n    (m) =>\r\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\r\n  );\r\n  const knownProgram = MARKETS.find(\r\n    (m) => m.programId.toBase58() === programId,\r\n  );\r\n  const knownBaseCurrency =\r\n    market?.baseMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n      ?.name;\r\n\r\n  const knownQuoteCurrency =\r\n    market?.quoteMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n      ?.name;\r\n\r\n  const canSubmit =\r\n    !loadingMarket &&\r\n    !!market &&\r\n    market.publicKey.toBase58() === marketId &&\r\n    marketId &&\r\n    programId &&\r\n    marketLabel &&\r\n    (knownBaseCurrency || baseLabel) &&\r\n    (knownQuoteCurrency || quoteLabel) &&\r\n    wellFormedMarketId;\r\n\r\n  const onSubmit = () => {\r\n    if (!canSubmit) {\r\n      notify({\r\n        message: 'Please fill in all fields with valid values',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      address: marketId,\r\n      programId,\r\n      name: marketLabel,\r\n    };\r\n    if (!knownBaseCurrency) {\r\n      params.baseLabel = baseLabel;\r\n    }\r\n    if (!knownQuoteCurrency) {\r\n      params.quoteLabel = quoteLabel;\r\n    }\r\n    onAddCustomMarket(params);\r\n    onDoClose();\r\n  };\r\n\r\n  const onDoClose = () => {\r\n    resetLabels();\r\n    setMarket(null);\r\n    setMarketId(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom market'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit }}\r\n    >\r\n      <div>\r\n        {wellFormedMarketId ? (\r\n          <>\r\n            {!market && !loadingMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Not a valid market</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\r\n              </Row>\r\n            )}\r\n            {market && !knownProgram && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownProgram && knownProgram.deprecated && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {marketId && !wellFormedMarketId && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Invalid market ID</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n        <Row style={{ marginBottom: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Id\"\r\n              value={marketId}\r\n              onChange={(e) => setMarketId(e.target.value)}\r\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Label\"\r\n              disabled={!market}\r\n              value={marketLabel}\r\n              onChange={(e) => setMarketLabel(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Base label\"\r\n              disabled={!market || knownBaseCurrency}\r\n              value={knownBaseCurrency || baseLabel}\r\n              onChange={(e) => setBaseLabel(e.target.value)}\r\n            />\r\n            {market && !knownBaseCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Quote label\"\r\n              disabled={!market || knownQuoteCurrency}\r\n              value={knownQuoteCurrency || quoteLabel}\r\n              onChange={(e) => setQuoteLabel(e.target.value)}\r\n            />\r\n            {market && !knownQuoteCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport Orderbook from '../components/Orderbook';\r\nimport UserInfoTable from '../components/UserInfoTable';\r\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\r\nimport {\r\n  useMarket,\r\n  useMarketsList,\r\n  useUnmigratedDeprecatedMarkets,\r\n  getMarketInfos,\r\n} from '../utils/markets';\r\nimport TradeForm from '../components/TradeForm';\r\nimport TradesTable from '../components/TradesTable';\r\nimport LinkAddress from '../components/LinkAddress';\r\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\r\nimport {\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport CustomMarketDialog from '../components/CustomMarketDialog';\r\nimport { notify } from '../utils/notifications';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function TradePage() {\r\n  const {\r\n    market,\r\n    marketName,\r\n    customMarkets,\r\n    setCustomMarkets,\r\n    setMarketAddress,\r\n  } = useMarket();\r\n  const markets = useMarketsList();\r\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\r\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\r\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\r\n  }, [marketName]);\r\n\r\n  const changeOrderRef = useRef<({ size, price }: {size?: number; price?: number;}) => void>();\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const width = dimensions?.width;\r\n  const componentProps = {\r\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\r\n    onPrice: useCallback(\r\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\r\n      [],\r\n    ),\r\n    onSize: useCallback(\r\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\r\n      [],\r\n    ),\r\n  };\r\n  const getComponent = useCallback(() => {\r\n    if (handleDeprecated) {\r\n      return (\r\n        <DeprecatedMarketsPage\r\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\r\n        />\r\n      );\r\n    } else if (width < 1000) {\r\n      return <RenderSmaller {...componentProps} />;\r\n    } else if (width < 1450) {\r\n      return <RenderSmall {...componentProps} />;\r\n    } else {\r\n      return <RenderNormal {...componentProps} />;\r\n    }\r\n  }, [width, componentProps, handleDeprecated]);\r\n\r\n  const onAddCustomMarket = (customMarket) => {\r\n    const marketInfo = getMarketInfos(customMarkets).some(\r\n      (m) => m.address.toBase58() === customMarket.address,\r\n    );\r\n    if (marketInfo) {\r\n      notify({\r\n        message: `A market with the given ID already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newCustomMarkets = [...customMarkets, customMarket];\r\n    setCustomMarkets(newCustomMarkets);\r\n    setMarketAddress(customMarket.address);\r\n  };\r\n\r\n  const onDeleteCustomMarket = (address) => {\r\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\r\n    setCustomMarkets(newCustomMarkets);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomMarketDialog\r\n        visible={addMarketVisible}\r\n        onClose={() => setAddMarketVisible(false)}\r\n        onAddCustomMarket={onAddCustomMarket}\r\n      />\r\n      <Wrapper>\r\n        <Row\r\n          align=\"middle\"\r\n          style={{ paddingLeft: 5, paddingRight: 5 }}\r\n          gutter={16}\r\n        >\r\n          <Col>\r\n            <MarketSelector\r\n              markets={markets}\r\n              setHandleDeprecated={setHandleDeprecated}\r\n              placeholder={'Select market'}\r\n              customMarkets={customMarkets}\r\n              onDeleteCustomMarket={onDeleteCustomMarket}\r\n            />\r\n          </Col>\r\n          {market ? (\r\n            <Col>\r\n              <Popover\r\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\r\n                placement=\"bottomRight\"\r\n                title=\"Market address\"\r\n                trigger=\"click\"\r\n              >\r\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n              </Popover>\r\n            </Col>\r\n          ) : null}\r\n          <Col>\r\n            <PlusCircleOutlined\r\n              style={{ color: '#2abdd2' }}\r\n              onClick={() => setAddMarketVisible(true)}\r\n            />\r\n          </Col>\r\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\r\n            <React.Fragment>\r\n              <Col>\r\n                <Typography>\r\n                  You have unsettled funds on old markets! Please go through\r\n                  them to claim your funds.\r\n                </Typography>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\r\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\r\n                </Button>\r\n              </Col>\r\n            </React.Fragment>\r\n          )}\r\n        </Row>\r\n        {getComponent()}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarketSelector({\r\n  markets,\r\n  placeholder,\r\n  setHandleDeprecated,\r\n  customMarkets,\r\n  onDeleteCustomMarket,\r\n}) {\r\n  const { market, setMarketAddress } = useMarket();\r\n\r\n  const onSetMarketAddress = (marketAddress) => {\r\n    setHandleDeprecated(false);\r\n    setMarketAddress(marketAddress);\r\n  };\r\n\r\n  const extractBase = (a) => a.split('/')[0];\r\n  const extractQuote = (a) => a.split('/')[1];\r\n\r\n  const selectedMarket = getMarketInfos(customMarkets)\r\n    .find(\r\n      (proposedMarket) =>\r\n        market?.address && proposedMarket.address.equals(market.address),\r\n    )\r\n    ?.address?.toBase58();\r\n\r\n  return (\r\n    <Select\r\n      showSearch\r\n      size={'large'}\r\n      style={{ width: 200 }}\r\n      placeholder={placeholder || 'Select a market'}\r\n      optionFilterProp=\"name\"\r\n      onSelect={onSetMarketAddress}\r\n      listHeight={400}\r\n      value={selectedMarket}\r\n      filterOption={(input, option) =>\r\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {customMarkets && customMarkets.length > 0 && (\r\n        <OptGroup label=\"Custom\">\r\n          {customMarkets.map(({ address, name }, i) => (\r\n            <Option\r\n              value={address}\r\n              key={address}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col flex=\"auto\">{name}</Col>\r\n                {selectedMarket !== address && (\r\n                  <Col>\r\n                    <DeleteOutlined\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.nativeEvent.stopImmediatePropagation();\r\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Option>\r\n          ))}\r\n        </OptGroup>\r\n      )}\r\n      <OptGroup label=\"Markets\">\r\n        {markets\r\n          .sort((a, b) =>\r\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\r\n              ? -1\r\n              : extractQuote(a.name) !== 'USDT' &&\r\n                extractQuote(b.name) === 'USDT'\r\n              ? 1\r\n              : 0,\r\n          )\r\n          .sort((a, b) =>\r\n            extractBase(a.name) < extractBase(b.name)\r\n              ? -1\r\n              : extractBase(a.name) > extractBase(b.name)\r\n              ? 1\r\n              : 0,\r\n          )\r\n          .map(({ address, name, deprecated }, i) => (\r\n            <Option\r\n              value={address.toBase58()}\r\n              key={address}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              {name} {deprecated ? ' (Deprecated)' : null}\r\n            </Option>\r\n          ))}\r\n      </OptGroup>\r\n    </Select>\r\n  );\r\n}\r\n\r\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <DeprecatedMarketsInstructions\r\n            switchToLiveMarkets={switchToLiveMarkets}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <Row\r\n      style={{\r\n        minHeight: '900px',\r\n        flexWrap: 'nowrap',\r\n      }}\r\n    >\r\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n        <UserInfoTable />\r\n      </Col>\r\n      <Col flex={'360px'} style={{ height: '100%' }}>\r\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\r\n        <TradesTable smallScreen={false} />\r\n      </Col>\r\n      <Col\r\n        flex=\"400px\"\r\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n        <StandaloneBalancesDisplay />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          height: '900px',\r\n        }}\r\n      >\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook\r\n            smallScreen={true}\r\n            depth={13}\r\n            onPrice={onPrice}\r\n            onSize={onSize}\r\n          />\r\n        </Col>\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n        <Col\r\n          flex=\"400px\"\r\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n        >\r\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          height: '500px',\r\n        }}\r\n      >\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\r\n        </Col>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport {getMarketInfos, useAllMarkets, useAllOpenOrders, useMarket} from \"../utils/markets\";\r\nimport OpenOrderTable from \"../components/UserInfoTable/OpenOrderTable\";\r\nimport {Button} from \"antd\";\r\nimport {OrderWithMarketAndMarketName} from \"../utils/types\";\r\n\r\nexport default function OpenOrdersPage() {\r\n  const {openOrders, loaded, refreshOpenOrders} = useAllOpenOrders();\r\n  let {customMarkets} = useMarket();\r\n  let marketInfos = getMarketInfos(customMarkets);\r\n  let marketAddressesToNames = Object.fromEntries(marketInfos.map(info => [info.address.toBase58(), info.name]));\r\n  let [allMarkets] = useAllMarkets(customMarkets);\r\n  const marketsByAddress = Object.fromEntries((allMarkets || []).map(\r\n    marketInfo => [marketInfo.market.address.toBase58(), marketInfo.market]\r\n  ));\r\n\r\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || []).map((orderInfos) =>\r\n    orderInfos.orders.map(order => {\r\n      return {\r\n        marketName: marketAddressesToNames[orderInfos.marketAddress],\r\n        market: marketsByAddress[orderInfos.marketAddress],\r\n        ...order\r\n      };\r\n    })\r\n  ).flat();\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Button\r\n        onClick={refreshOpenOrders}\r\n        loading={!loaded}\r\n      >\r\n        Refresh\r\n      </Button>\r\n      <OpenOrderTable\r\n        openOrders={dataSource}\r\n        pageSize={25}\r\n        loading={!loaded}\r\n        onCancelSuccess={refreshOpenOrders}\r\n        marketFilter\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport DataTable from '../layout/DataTable';\r\nimport {Button, Row} from \"antd\";\r\nimport {settleAllFunds} from \"../../utils/send\";\r\nimport {notify} from \"../../utils/notifications\";\r\nimport {useConnection} from \"../../utils/connection\";\r\nimport {useWallet} from \"../../utils/wallet\";\r\nimport {useAllMarkets, useMarket, useSelectedTokenAccounts, useTokenAccounts} from \"../../utils/markets\";\r\nimport StandaloneTokenAccountsSelect from \"../StandaloneTokenAccountSelect\";\r\n\r\nexport default function WalletBalancesTable({\r\n  walletBalances,\r\n}: {\r\n  walletBalances: {\r\n    coin: string;\r\n    mint: string;\r\n    walletBalance: number;\r\n    openOrdersFree: number;\r\n    openOrdersTotal: number;\r\n  }[]\r\n}) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\r\n  const {customMarkets} = useMarket();\r\n  const [allMarkets, allMarketsConnected] = useAllMarkets(customMarkets);\r\n  const [settlingFunds, setSettlingFunds] = useState(false);\r\n\r\n  async function onSettleFunds() {\r\n    setSettlingFunds(true);\r\n    try {\r\n      if (!tokenAccounts || !tokenAccountsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'TokenAccounts not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      if (!allMarkets || !allMarketsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'Markets not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      await settleAllFunds({\r\n        connection,\r\n        tokenAccounts,\r\n        selectedTokenAccounts,\r\n        wallet,\r\n        markets: allMarkets.map(marketInfo => marketInfo.market),\r\n      })\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSettlingFunds(false);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Coin',\r\n      dataIndex: 'coin',\r\n      key: 'coin',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Wallet Balance',\r\n      dataIndex: 'walletBalance',\r\n      key: 'walletBalance',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Open orders total balances',\r\n      dataIndex: 'openOrdersTotal',\r\n      key: 'openOrdersTotal',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Unsettled balances',\r\n      dataIndex: 'openOrdersFree',\r\n      key: 'openOrdersFree',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Selected token account',\r\n      key: 'selectTokenAccount',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\" style={{width: \"430px\"}}>\r\n          <StandaloneTokenAccountsSelect\r\n            accounts={tokenAccounts?.filter(t => t.effectiveMint.toBase58() === walletBalance.mint)}\r\n            mint={walletBalance.mint}\r\n          />\r\n        </Row>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <DataTable\r\n        emptyLabel=\"No balances\"\r\n        dataSource={walletBalances}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n      {connected &&\r\n        <Button\r\n          onClick={onSettleFunds}\r\n          loading={settlingFunds}\r\n        >\r\n          Settle all funds\r\n        </Button>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Tabs} from 'antd';\r\nimport {useAllOpenOrdersBalances, useWalletBalancesForAllMarkets,} from '../utils/markets';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\r\nimport {useMintToTickers} from \"../utils/tokens\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function BalancesPage() {\r\n  const walletBalances = useWalletBalancesForAllMarkets();\r\n  const mintToTickers = useMintToTickers();\r\n  const openOrdersBalances = useAllOpenOrdersBalances();\r\n\r\n  const data = (walletBalances || []).map(balance => {\r\n    const balances = {\r\n      coin: mintToTickers[balance.mint],\r\n      mint: balance.mint,\r\n      walletBalance: balance.balance,\r\n      openOrdersFree: 0.,\r\n      openOrdersTotal: 0.,\r\n    }\r\n    for (let openOrdersAccount of (openOrdersBalances[balance.mint] || [])) {\r\n      balances['openOrdersFree'] += openOrdersAccount.free;\r\n      balances['openOrdersTotal'] += openOrdersAccount.total;\r\n    }\r\n    return balances\r\n  });\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Tabs defaultActiveKey=\"walletBalances\">\r\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\r\n          <WalletBalancesTable\r\n            walletBalances={data}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Button, Popover} from 'antd';\r\nimport {InfoCircleOutlined, UserOutlined} from '@ant-design/icons';\r\nimport { useWallet } from '../utils/wallet';\r\nimport LinkAddress from \"./LinkAddress\";\r\n\r\nexport default function WalletConnect() {\r\n  const { connected, wallet } = useWallet();\r\n  const publicKey = wallet?.publicKey?.toBase58();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        type=\"text\"\r\n        size=\"large\"\r\n        onClick={connected ? wallet.disconnect : wallet.connect}\r\n        style={{ color: '#2abdd2' }}\r\n      >\r\n        <UserOutlined />\r\n        {!connected ? 'Connect wallet' : 'Disconnect'}\r\n      </Button>\r\n      {connected && (\r\n        <Popover\r\n          content={<LinkAddress address={publicKey} />}\r\n          placement=\"bottomRight\"\r\n          title=\"Wallet public key\"\r\n          trigger=\"click\"\r\n        >\r\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n        </Popover>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Input, Row, Select, Typography} from 'antd';\r\nimport styled from 'styled-components';\r\nimport {Market, Orderbook} from '@project-serum/serum';\r\nimport {\r\n  getExpectedFillPrice,\r\n  getMarketDetails,\r\n  getMarketInfos,\r\n  getMarketOrderPrice,\r\n  getSelectedTokenAccountForMint,\r\n  useBalances,\r\n  useMarket,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport {notify} from '../utils/notifications';\r\nimport {useWallet} from '../utils/wallet';\r\nimport {useConnection, useSendConnection} from '../utils/connection';\r\nimport {placeOrder} from '../utils/send';\r\nimport {floorToDecimal, getDecimalCount} from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport WalletConnect from './WalletConnect';\r\nimport {SwapOutlined} from \"@ant-design/icons\";\r\nimport {CustomMarketInfo} from \"../utils/types\";\r\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: #2abdd2;\r\n  background-color: #212734;\r\n  border-width: 0px;\r\n`;\r\n\r\nconst ConvertButton = styled(Button)`\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nexport default function ConvertForm() {\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useMarket();\r\n  const marketInfos = getMarketInfos(customMarkets)\r\n  const {market, setMarketAddress} = useMarket();\r\n\r\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\r\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\r\n  const [size, setSize] = useState<number | undefined>(undefined);\r\n\r\n  const marketInfosbyName = Object.fromEntries(marketInfos.map(market => [market.name, market]));\r\n\r\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\r\n  Object.keys(marketInfosbyName).forEach((market) => {\r\n    let [base, quote] = market.split('/');\r\n    !tokenConvertMap.has(base)\r\n      ? tokenConvertMap.set(base, new Set([quote]))\r\n      : tokenConvertMap.set(base, new Set([...(tokenConvertMap.get(base) || []), quote]));\r\n    !tokenConvertMap.has(quote)\r\n      ? tokenConvertMap.set(quote, new Set([base]))\r\n      : tokenConvertMap.set(quote, new Set([...(tokenConvertMap.get(quote) || []), base]));\r\n  });\r\n\r\n  const setMarket = (toToken) => {\r\n    const marketInfo = marketInfos.filter(marketInfo => !marketInfo.deprecated).find(marketInfo =>\r\n      marketInfo.name === `${fromToken}/${toToken}` || marketInfo.name === `${toToken}/${fromToken}`\r\n    );\r\n    if (!marketInfo) {\r\n      console.warn(`Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`);\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    setMarketAddress(marketInfo.address.toBase58())\r\n    setToToken(toToken);\r\n  }\r\n\r\n  return (\r\n    <FloatingElement style={{ maxWidth: 500 }}>\r\n      <Title level={3}>Convert</Title>\r\n      {!connected && (\r\n        <Row justify=\"center\">\r\n          <Col>\r\n            <WalletConnect />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {tokenConvertMap && connected && (\r\n        <>\r\n          <Row style={{ marginBottom: 8 }}>\r\n            <Col>\r\n              <Select\r\n                style={{ minWidth: 300 }}\r\n                placeholder=\"Select a token\"\r\n                value={fromToken}\r\n                onChange={(token) => {\r\n                  setFromToken(token);\r\n                  setToToken(undefined);\r\n                }}\r\n              >\r\n                {Array.from(tokenConvertMap.keys()).map((token) => (\r\n                  <Option value={token} key={token}>\r\n                    {token}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          {fromToken && (\r\n            <Row style={{ marginBottom: 8 }}>\r\n              <Col>\r\n                <Select\r\n                  style={{ minWidth: 300 }}\r\n                  value={toToken}\r\n                  onChange={setMarket}\r\n                >\r\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\r\n                    <Option value={token} key={token}>\r\n                      {token}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {fromToken && toToken && (\r\n            <ConvertFormSubmit\r\n              size={size}\r\n              setSize={setSize}\r\n              fromToken={fromToken}\r\n              toToken={toToken}\r\n              wallet={wallet}\r\n              market={market}\r\n              customMarkets={customMarkets}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction ConvertFormSubmit({\r\n  size,\r\n  setSize,\r\n  fromToken,\r\n  toToken,\r\n  wallet,\r\n  market,\r\n  customMarkets\r\n} : {\r\n  size: number | null | undefined;\r\n  setSize: (newSize: number | undefined) => void;\r\n  fromToken: string;\r\n  toToken: string;\r\n  wallet: Wallet;\r\n  market: Market | null | undefined;\r\n  customMarkets: CustomMarketInfo[];\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const balances = useBalances();\r\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\r\n  const [toAmount, setToAmount] = useState<number | undefined>();\r\n\r\n  const connection = useConnection();\r\n  const sendConnection = useSendConnection();\r\n\r\n  const [isConverting, setIsConverting] = useState(false);\r\n\r\n  const isFromTokenBaseOfMarket = (market) => {\r\n    const { marketName } = getMarketDetails(market, customMarkets);\r\n    if (!marketName) {\r\n      throw Error('Cannot determine if coin is quote or base because marketName is missing');\r\n    }\r\n    const [base] = marketName.split('/');\r\n    return fromToken === base;\r\n  };\r\n\r\n  const onConvert = async () => {\r\n    if (!market) {\r\n      console.warn('Market is null when attempting convert.');\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    // get accounts\r\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.baseMintAddress,\r\n    );\r\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.quoteMintAddress,\r\n    );\r\n\r\n    // get approximate price\r\n    let side;\r\n    try {\r\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const sidedOrderbookAccount =\r\n      // @ts-ignore\r\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n    const orderbookData = await connection.getAccountInfo(sidedOrderbookAccount);\r\n    if (!orderbookData?.data) {\r\n      notify({ message: 'Invalid orderbook data', type: 'error' });\r\n      return;\r\n    }\r\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n    const [bbo] =\r\n      decodedOrderbookData &&\r\n      decodedOrderbookData.getL2(1).map(([price]) => price);\r\n    if (!bbo) {\r\n      notify({ message: 'No best price found', type: 'error' });\r\n      return;\r\n    }\r\n    if (!size) {\r\n      notify({ message: 'Size not specified', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    const tickSizeDecimals =  getDecimalCount(market.tickSize);\r\n    const parsedPrice = getMarketOrderPrice(decodedOrderbookData, size, tickSizeDecimals);\r\n\r\n    // round size\r\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\r\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\r\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\r\n\r\n    setIsConverting(true);\r\n    try {\r\n      await placeOrder({\r\n        side,\r\n        price: parsedPrice,\r\n        size: parsedSize,\r\n        orderType: 'ioc',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n      });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsConverting(false);\r\n    }\r\n  };\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n      const sidedOrderbookAccount =\r\n        // @ts-ignore\r\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n      const orderbookData = await connection.getAccountInfo(sidedOrderbookAccount);\r\n      if (!orderbookData?.data || !market) {\r\n        return [null, null];\r\n      }\r\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n      const [bbo] =\r\n      decodedOrderbookData &&\r\n      decodedOrderbookData.getL2(1).map(([price]) => price);\r\n      if (!bbo || !size) {\r\n        return [null, null];\r\n      }\r\n      const tickSizeDecimals =  getDecimalCount(market.tickSize);\r\n      const expectedPrice = getExpectedFillPrice(decodedOrderbookData, size, tickSizeDecimals)\r\n      if (side === 'buy') {\r\n        return [expectedPrice.toFixed(6), 1];\r\n      } else {\r\n        return [1, expectedPrice.toFixed(6)];\r\n      }\r\n    } catch (e) {\r\n      console.log(`Got error ${e}`);\r\n      return [null, null];\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      getPrice().then(([fromAmount, toAmount]) => {\r\n        setFromAmount(fromAmount || undefined);\r\n        setToAmount(toAmount || undefined);\r\n      })\r\n    },\r\n    // eslint-disable-next-line\r\n    [market?.address.toBase58(), size]\r\n  )\r\n\r\n  const canConvert = market && size && size > 0;\r\n  const balance = balances.find(coinBalance => coinBalance.coin === fromToken);\r\n  const availableBalance = ((balance?.unsettled || 0.) + (balance?.wallet || 0.)) * 0.99;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col>\r\n          <Input\r\n            style={{ minWidth: 300 }}\r\n            addonBefore={`Size (${fromToken})`}\r\n            placeholder=\"Size\"\r\n            value={size === null ? undefined : size}\r\n            type=\"number\"\r\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={12} style={{ marginBottom: 8 }}>\r\n        <Col span={12}>\r\n          <ActionButton\r\n            block\r\n            size=\"large\"\r\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\r\n          >\r\n            Max: {availableBalance.toFixed(4)}\r\n          </ActionButton>\r\n        </Col>\r\n        <Col span={12}>\r\n          <ConvertButton\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={isConverting}\r\n            onClick={onConvert}\r\n            disabled={!canConvert}\r\n          >\r\n            Convert\r\n          </ConvertButton>\r\n        </Col>\r\n      </Row>\r\n      {canConvert && (\r\n        <Row align=\"middle\"  justify=\"center\">\r\n          <Col >\r\n            {fromAmount} {fromToken}\r\n          </Col>\r\n          <Col offset={1}>\r\n            <SwapOutlined/>\r\n          </Col>\r\n          <Col offset={1}>\r\n            {toAmount} {toToken}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ConvertForm from '../components/ConvertForm';\r\nimport { Row, Col } from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function ConvertPage() {\r\n  return (\r\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <ConvertForm />\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useLocalStorageState } from './utils';\r\nimport { useInterval } from './useInterval';\r\nimport { useConnection } from './connection';\r\nimport { useWallet } from './wallet';\r\nimport {useAllMarkets, useTokenAccounts, useMarket, useSelectedTokenAccounts} from './markets';\r\nimport { settleAllFunds } from './send';\r\nimport {PreferencesContextValues} from \"./types\";\r\n\r\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(null);\r\n\r\nexport function PreferencesProvider({ children }) {\r\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\r\n    'autoSettleEnabled',\r\n    true,\r\n  );\r\n\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useMarket();\r\n  const [marketList] = useAllMarkets(customMarkets);\r\n  const connection = useConnection();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n\r\n  useInterval(() => {\r\n    const autoSettle = async () => {\r\n      const markets = (marketList || []).map((m) => m.market);\r\n      try {\r\n        console.log('Auto settling');\r\n        await settleAllFunds({ connection, wallet, tokenAccounts: (tokenAccounts || []), markets, selectedTokenAccounts });\r\n      } catch (e) {\r\n        console.log('Error auto settling funds: ' + e.message);\r\n      }\r\n    };\r\n\r\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\r\n  }, 10000);\r\n\r\n  return (\r\n    <PreferencesContext.Provider\r\n      value={{\r\n        autoSettleEnabled,\r\n        setAutoSettleEnabled,\r\n      }}\r\n    >\r\n      {children}\r\n    </PreferencesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePreferences() {\r\n  const context = useContext(PreferencesContext);\r\n  if (!context) {\r\n    throw new Error('Missing preferences context')\r\n  }\r\n  return {\r\n    autoSettleEnabled: context.autoSettleEnabled,\r\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Switch, Typography } from 'antd';\r\nimport { usePreferences } from '../utils/preferences';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport default function Settings({ autoApprove }) {\r\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\r\n\r\n  return (\r\n    <div>\r\n      <Switch\r\n        style={{ marginRight: 10 }}\r\n        disabled={!autoApprove}\r\n        checked={autoApprove && autoSettleEnabled}\r\n        onChange={setAutoSettleEnabled}\r\n      />{' '}\r\n      Auto settle\r\n      {!autoApprove && (\r\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\r\n          To use auto settle, first enable auto approval in your wallet\r\n        </Paragraph>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Col, Input, Modal, Row} from \"antd\";\r\nimport {EndpointInfo} from \"../utils/types\";\r\n\r\nexport default function CustomClusterEndpointDialog({\r\n  visible,\r\n  testingConnection,\r\n  onAddCustomEndpoint,\r\n  onClose,\r\n} : {\r\n  visible: boolean;\r\n  testingConnection: boolean;\r\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\r\n  onClose?: () => void;\r\n}) {\r\n  const [ customEndpoint, setCustomEndpoint] = useState('');\r\n  const [ customEndpointName, setCustomEndpointName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    const fullEndpoint = 'https://' + customEndpoint;\r\n    const params = {\r\n      name: customEndpointName,\r\n      endpoint: fullEndpoint,\r\n      custom: true,\r\n    }\r\n    onAddCustomEndpoint(params);\r\n    onDoClose();\r\n  };\r\n  const onDoClose = () => {\r\n    setCustomEndpoint('')\r\n    setCustomEndpointName('')\r\n    onClose && onClose();\r\n  };\r\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom endpoint'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\r\n    >\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Name\"\r\n            value={customEndpointName}\r\n            onChange={(e) => setCustomEndpointName(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Endpoint\"\r\n            value={customEndpoint}\r\n            addonBefore={'https://'}\r\n            onChange={(e) => setCustomEndpoint(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n}\r\n","import {InfoCircleOutlined, PlusCircleOutlined, SettingOutlined,} from '@ant-design/icons';\r\nimport {Button, Col, Menu, Popover, Row, Select} from 'antd';\r\nimport React, {useCallback, useEffect, useState} from 'react';\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\nimport logo from '../assets/logo.svg';\r\nimport styled from 'styled-components';\r\nimport {useWallet, WALLET_PROVIDERS} from '../utils/wallet';\r\nimport {ENDPOINTS, useConnectionConfig} from '../utils/connection';\r\nimport Settings from './Settings';\r\nimport CustomClusterEndpointDialog from \"./CustomClusterEndpointDialog\";\r\nimport {EndpointInfo} from \"../utils/types\";\r\nimport {notify} from \"../utils/notifications\";\r\nimport {Connection} from \"@solana/web3.js\";\r\nimport WalletConnect from './WalletConnect';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #0d1017;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  padding: 0px 30px;\r\n  flex-wrap: wrap;\r\n`;\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #2abdd2;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  img {\r\n    height: 30px;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst EXTERNAL_LINKS = {\r\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\r\n  '/add-market': 'https://serum-academy.com/en/add-market/',\r\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\r\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\r\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\r\n  '/explorer': 'https://explorer.solana.com',\r\n  '/srm-faq': 'https://projectserum.com/srm-faq',\r\n}\r\n\r\nexport default function TopBar() {\r\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\r\n  const { endpoint, endpointInfo, setEndpoint, availableEndpoints, setCustomEndpoints } = useConnectionConfig();\r\n  const [ addEndpointVisible, setAddEndpointVisible ] = useState(false)\r\n  const [ testingConnection, setTestingConnection] = useState(false)\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const handleClick = useCallback(\r\n    (e) => {\r\n      if (!(e.key in EXTERNAL_LINKS)) {\r\n        history.push(e.key);\r\n      }\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\r\n    const existingEndpoint = availableEndpoints.some(\r\n      (e) => e.endpoint === info.endpoint,\r\n    );\r\n    if (existingEndpoint) {\r\n      notify({\r\n        message: `An endpoint with the given url already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const handleError = (e) => {\r\n      console.log(`Connection to ${info.endpoint} failed: ${e}`)\r\n      notify({\r\n        message: `Failed to connect to ${info.endpoint}`,\r\n        type: 'error',\r\n      });\r\n    }\r\n\r\n    try {\r\n      const connection = new Connection(info.endpoint, 'recent');\r\n      connection.getEpochInfo().then(result => {\r\n        setTestingConnection(true);\r\n        console.log(`testing connection to ${info.endpoint}`);\r\n        const newCustomEndpoints = [...availableEndpoints.filter(e => e.custom), info];\r\n        setEndpoint(info.endpoint);\r\n        setCustomEndpoints(newCustomEndpoints);\r\n      }).catch(handleError);\r\n    } catch (e) {\r\n      handleError(e);\r\n    } finally {\r\n      setTestingConnection(false);\r\n    }\r\n  }\r\n\r\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      if (endpointInfoCustom) {\r\n        setEndpoint(ENDPOINTS[0].endpoint)\r\n      }\r\n    }\r\n    window.addEventListener(\"beforeunload\", handler)\r\n    return () => window.removeEventListener(\"beforeunload\", handler)\r\n  }, [endpointInfoCustom, setEndpoint])\r\n\r\n  return (\r\n    <>\r\n      <CustomClusterEndpointDialog\r\n        visible={addEndpointVisible}\r\n        testingConnection={testingConnection}\r\n        onAddCustomEndpoint={onAddCustomEndpoint}\r\n        onClose={() => setAddEndpointVisible(false)}\r\n      />\r\n      <Wrapper>\r\n        <LogoWrapper>\r\n          <img src={logo} alt=\"\" onClick={() => history.push('/')} />\r\n          {'SERUM'}\r\n        </LogoWrapper>\r\n        <Menu\r\n          mode=\"horizontal\"\r\n          onClick={handleClick}\r\n          selectedKeys={[location.pathname]}\r\n          style={{\r\n            borderBottom: 'none',\r\n            backgroundColor: 'transparent',\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n            flex: 1,\r\n          }}\r\n        >\r\n          <Menu.Item key=\"/\">TRADE</Menu.Item>\r\n          {connected && <Menu.Item key=\"/balances\">BALANCES</Menu.Item>}\r\n          {connected && <Menu.Item key=\"/orders\">ORDERS</Menu.Item>}\r\n          {connected && <Menu.Item key=\"/convert\">CONVERT</Menu.Item>}\r\n          <Menu.Item key=\"/list-new-market\">ADD MARKET</Menu.Item>\r\n          <Menu.SubMenu title=\"LEARN\" onTitleClick={() => window.open(EXTERNAL_LINKS['/learn'], '_blank')}>\r\n            <Menu.Item key=\"/add-market\">\r\n              <a href={EXTERNAL_LINKS['/add-market']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Adding a market\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/wallet-support\">\r\n              <a href={EXTERNAL_LINKS['/wallet-support']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Supported wallets\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/dex-list\">\r\n              <a href={EXTERNAL_LINKS['/dex-list']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                DEX list\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/developer-resources\">\r\n              <a href={EXTERNAL_LINKS['/developer-resources']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Developer resources\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/explorer\">\r\n              <a href={EXTERNAL_LINKS['/explorer']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Solana block explorer\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/srm-faq\">\r\n              <a href={EXTERNAL_LINKS['/srm-faq']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                SRM FAQ\r\n              </a>\r\n            </Menu.Item>\r\n          </Menu.SubMenu>\r\n        </Menu>\r\n        <div>\r\n          <Row\r\n            align=\"middle\"\r\n            style={{ paddingLeft: 5, paddingRight: 5 }}\r\n            gutter={16}\r\n          >\r\n            <Col>\r\n              <PlusCircleOutlined\r\n                style={{ color: '#2abdd2' }}\r\n                onClick={() => setAddEndpointVisible(true)}\r\n              />\r\n            </Col>\r\n             <Col>\r\n              <Popover\r\n                content={endpoint}\r\n                placement=\"bottomRight\"\r\n                title=\"URL\"\r\n                trigger=\"hover\"\r\n              >\r\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n              </Popover>\r\n            </Col>\r\n            <Col>\r\n              <Select\r\n                onSelect={setEndpoint}\r\n                value={endpoint}\r\n                style={{ marginRight: 8, width: '150px' }}\r\n              >\r\n                {availableEndpoints.map(({ name, endpoint }) => (\r\n                  <Select.Option value={endpoint} key={endpoint}>\r\n                    {name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {connected && (\r\n          <div>\r\n            <Popover\r\n              content={<Settings autoApprove={wallet?.autoApprove} />}\r\n              placement=\"bottomRight\"\r\n              title=\"Settings\"\r\n              trigger=\"click\"\r\n            >\r\n              <Button style={{ marginRight: 8 }}>\r\n                <SettingOutlined />\r\n                Settings\r\n              </Button>\r\n            </Popover>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <Select onSelect={setProvider} value={providerUrl}>\r\n            {WALLET_PROVIDERS.map(({ name, url }) => (\r\n              <Select.Option value={url} key={url}>\r\n                {name}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <WalletConnect/>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","export const helpUrls = {\r\n  customerSupport: 'https://t.me/ProjectSerum',\r\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\r\n  contactEmail: 'mailto:contact@projectserum.com',\r\n  discord: 'https://discord.gg/EDvudv6',\r\n  telegram: 'https://t.me/ProjectSerum',\r\n  github: 'https://github.com/project-serum',\r\n  projectSerum: 'https://projectserum.com/',\r\n  developerResources: 'https://projectserum.com/developer-resources',\r\n  solanaBeach: 'https://solanabeach.io',\r\n};\r\n","import React from 'react';\r\nimport { Layout, Row, Col, Grid } from 'antd';\r\nimport Link from './Link';\r\nimport { helpUrls } from './HelpUrls';\r\nconst { Footer } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst footerElements = [\r\n  {\r\n    description: 'Serum Developer Resources',\r\n    link: helpUrls.developerResources,\r\n  },\r\n  { description: 'Discord', link: helpUrls.discord },\r\n  { description: 'Telegram', link: helpUrls.telegram },\r\n  { description: 'GitHub', link: helpUrls.github },\r\n  { description: 'Project Serum', link: helpUrls.projectSerum },\r\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\r\n];\r\n\r\nexport const CustomFooter = () => {\r\n  const smallScreen = !useBreakpoint().lg;\r\n\r\n  return (\r\n    <Footer\r\n      style={{\r\n        height: '45px',\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n      }}\r\n    >\r\n      <Row align=\"middle\" gutter={[16, 4]}>\r\n        {!smallScreen && (\r\n          <>\r\n            <Col flex=\"auto\" />\r\n            {footerElements.map((elem, index) => {\r\n              return (\r\n                <Col key={index + ''}>\r\n                  <Link external to={elem.link}>\r\n                    {elem.description}\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\r\n      </Row>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React from 'react';\r\nimport TopBar from './TopBar';\r\nimport { CustomFooter as Footer } from './Footer';\r\nconst { Header, Content } = Layout;\r\n\r\nexport default function BasicLayout({ children }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Layout\r\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\r\n      >\r\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\r\n          <TopBar />\r\n        </Header>\r\n        <Content style={{ flex: 1 }}>{children}</Content>\r\n        <Footer />\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { MARKETS, TokenInstructions } from '@project-serum/serum';\r\nimport { useAccountInfo, useConnection } from '../utils/connection';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { parseTokenMintData } from '../utils/tokens';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { listMarket } from '../utils/send';\r\nimport Link from '../components/Link';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default function ListNewMarketPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [baseMintInput, baseMintInfo] = useMintInput(\r\n    'baseMint',\r\n    <Text>\r\n      Base Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. BTC solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\r\n  );\r\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\r\n    'quoteMint',\r\n    <Text>\r\n      Quote Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. USDT solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\r\n  );\r\n  const [lotSize, setLotSize] = useState('1');\r\n  const [tickSize, setTickSize] = useState('0.01');\r\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [listedMarket, setListedMarket] = useState(null);\r\n\r\n  let baseLotSize;\r\n  let quoteLotSize;\r\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\r\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\r\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\r\n      quoteLotSize = Math.round(\r\n        parseFloat(lotSize) *\r\n          10 ** quoteMintInfo.decimals *\r\n          parseFloat(tickSize),\r\n      );\r\n    }\r\n  }\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    !!baseMintInfo &&\r\n    !!quoteMintInfo &&\r\n    !!baseLotSize &&\r\n    !!quoteLotSize;\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const marketAddress = await listMarket({\r\n        connection,\r\n        wallet,\r\n        baseMint: baseMintInfo.address,\r\n        quoteMint: quoteMintInfo.address,\r\n        baseLotSize,\r\n        quoteLotSize,\r\n        dexProgramId,\r\n      });\r\n      setListedMarket(marketAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error listing new market: ' + e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>List New Market</Title>\r\n        <Form\r\n          labelCol={{ span: 24 }}\r\n          wrapperCol={{ span: 24 }}\r\n          layout={'vertical'}\r\n          onFinish={onSubmit}\r\n        >\r\n          {baseMintInput}\r\n          {quoteMintInput}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\r\n                Minimum Order Size{' '}\r\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"lotSize\"\r\n            initialValue=\"1\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? baseLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={lotSize}\r\n              onChange={(e) => setLotSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\r\n                Tick Size{' '}\r\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"tickSize\"\r\n            initialValue=\"0.01\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? quoteLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={tickSize}\r\n              onChange={(e) => setTickSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {listedMarket ? (\r\n        <FloatingElement>\r\n          <Text>New market address: {listedMarket.toBase58()}</Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction useMintInput(name, label, tooltip) {\r\n  const [address, setAddress] = useState('');\r\n  const [accountInfo, loaded] = useAccountInfo(\r\n    isValidPublicKey(address) ? new PublicKey(address) : null,\r\n  );\r\n\r\n  let validateStatus = null;\r\n  let hasFeedback = false;\r\n  let help = null;\r\n  let mintInfo = null;\r\n  if (address) {\r\n    hasFeedback = true;\r\n    if (accountInfo) {\r\n      if (\r\n        accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\r\n        accountInfo.data.length === 82\r\n      ) {\r\n        let parsed = parseTokenMintData(accountInfo.data);\r\n        if (parsed.initialized) {\r\n          validateStatus = 'success';\r\n          mintInfo = {\r\n            address: new PublicKey(address),\r\n            decimals: parsed.decimals,\r\n          };\r\n        } else {\r\n          validateStatus = 'error';\r\n          help = 'Invalid SPL mint';\r\n        }\r\n      } else {\r\n        validateStatus = 'error';\r\n        help = 'Invalid SPL mint address';\r\n      }\r\n    } else if (isValidPublicKey(address) && !loaded) {\r\n      validateStatus = 'loading';\r\n    } else {\r\n      validateStatus = 'error';\r\n      help = 'Invalid Solana address';\r\n    }\r\n  }\r\n\r\n  const input = (\r\n    <Form.Item\r\n      label={\r\n        <Tooltip\r\n          title={\r\n            <>\r\n              {tooltip} You can look up token mint addresses on{' '}\r\n              <Link external to=\"https://sollet.io\">\r\n                sollet.io\r\n              </Link>\r\n              .\r\n            </>\r\n          }\r\n        >\r\n          {label}\r\n        </Tooltip>\r\n      }\r\n      name={name}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={hasFeedback}\r\n      help={help}\r\n    >\r\n      <Input\r\n        value={address}\r\n        onChange={(e) => setAddress(e.target.value.trim())}\r\n      />\r\n    </Form.Item>\r\n  );\r\n\r\n  return [input, mintInfo];\r\n}\r\n","import { HashRouter, Route } from 'react-router-dom';\r\nimport TradePage from './pages/TradePage';\r\nimport OpenOrdersPage from './pages/OpenOrdersPage';\r\nimport React from 'react';\r\nimport BalancesPage from './pages/BalancesPage';\r\nimport ConvertPage from './pages/ConvertPage';\r\nimport BasicLayout from './components/BasicLayout';\r\nimport ListNewMarketPage from './pages/ListNewMarketPage';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <HashRouter basename={'/'}>\r\n      <Route exact path=\"/\" component={TradePageContents} />\r\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\r\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\r\n      <Route exact path=\"/convert\" component={ConvertPageContents} />\r\n      <Route exact path=\"/list-new-market\">\r\n        <BasicLayout>\r\n          <ListNewMarketPage />\r\n        </BasicLayout>\r\n      </Route>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nfunction TradePageContents() {\r\n  return (\r\n    <BasicLayout>\r\n      <TradePage />\r\n    </BasicLayout>\r\n  );\r\n}\r\n\r\nfunction OpenOrdersPageContents() {\r\n  return (\r\n    <BasicLayout>\r\n      <OpenOrdersPage />\r\n    </BasicLayout>\r\n  );\r\n}\r\n\r\nfunction BalancesPageContents() {\r\n  return (\r\n    <BasicLayout>\r\n      <BalancesPage />\r\n    </BasicLayout>\r\n  );\r\n}\r\n\r\nfunction ConvertPageContents() {\r\n  return (\r\n    <BasicLayout>\r\n      <ConvertPage />\r\n    </BasicLayout>\r\n  );\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport './App.less';\r\nimport { ConnectionProvider } from './utils/connection';\r\nimport { MarketProvider } from './utils/markets';\r\nimport { WalletProvider } from './utils/wallet';\r\nimport { GlobalStyle } from './global_style';\r\nimport { Spin } from 'antd';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { Routes } from './routes';\r\nimport { PreferencesProvider } from './utils/preferences';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Suspense fallback={() => <Spin size=\"large\" />}>\r\n      <GlobalStyle />\r\n      <ErrorBoundary>\r\n        <ConnectionProvider>\r\n          <MarketProvider>\r\n            <WalletProvider>\r\n              <PreferencesProvider>\r\n                <Suspense fallback={() => <Spin size=\"large\" />}>\r\n                  <Routes />\r\n                </Suspense>\r\n              </PreferencesProvider>\r\n            </WalletProvider>\r\n          </MarketProvider>\r\n        </ConnectionProvider>\r\n      </ErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}